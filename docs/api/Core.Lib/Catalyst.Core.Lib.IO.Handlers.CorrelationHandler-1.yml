### YamlMime:ManagedReference
items:
- uid: Catalyst.Core.Lib.IO.Handlers.CorrelationHandler`1
  commentId: T:Catalyst.Core.Lib.IO.Handlers.CorrelationHandler`1
  id: CorrelationHandler`1
  parent: Catalyst.Core.Lib.IO.Handlers
  children:
  - Catalyst.Core.Lib.IO.Handlers.CorrelationHandler`1.#ctor(`0)
  - Catalyst.Core.Lib.IO.Handlers.CorrelationHandler`1.ChannelRead0(IChannelHandlerContext,ProtocolMessage)
  langs:
  - csharp
  - vb
  name: CorrelationHandler<T>
  nameWithType: CorrelationHandler<T>
  fullName: Catalyst.Core.Lib.IO.Handlers.CorrelationHandler<T>
  type: Class
  source:
    remote:
      path: src/Catalyst.Core.Lib/IO/Handlers/CorrelationHandler.cs
      branch: gh-pages
      repo: https://github.com/catalyst-network/Catalyst.Framework.git
    id: CorrelationHandler
    path: ../src/Catalyst.Core.Lib/IO/Handlers/CorrelationHandler.cs
    startLine: 32
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.IO.Handlers
  syntax:
    content: 'public sealed class CorrelationHandler<T> : InboundChannelHandlerBase<ProtocolMessage> where T : IMessageCorrelationManager'
    typeParameters:
    - id: T
    content.vb: >-
      Public NotInheritable Class CorrelationHandler(Of T As IMessageCorrelationManager)

          Inherits InboundChannelHandlerBase(Of ProtocolMessage)
  inheritance:
  - System.Object
  - Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase{ProtocolMessage}
  inheritedMembers:
  - Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase{ProtocolMessage}.Logger
  - Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase{ProtocolMessage}.ChannelRead(IChannelHandlerContext,System.Object)
  nameWithType.vb: CorrelationHandler(Of T)
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
  fullName.vb: Catalyst.Core.Lib.IO.Handlers.CorrelationHandler(Of T)
  name.vb: CorrelationHandler(Of T)
- uid: Catalyst.Core.Lib.IO.Handlers.CorrelationHandler`1.#ctor(`0)
  commentId: M:Catalyst.Core.Lib.IO.Handlers.CorrelationHandler`1.#ctor(`0)
  id: '#ctor(`0)'
  parent: Catalyst.Core.Lib.IO.Handlers.CorrelationHandler`1
  langs:
  - csharp
  - vb
  name: CorrelationHandler(T)
  nameWithType: CorrelationHandler<T>.CorrelationHandler(T)
  fullName: Catalyst.Core.Lib.IO.Handlers.CorrelationHandler<T>.CorrelationHandler(T)
  type: Constructor
  source:
    remote:
      path: src/Catalyst.Core.Lib/IO/Handlers/CorrelationHandler.cs
      branch: gh-pages
      repo: https://github.com/catalyst-network/Catalyst.Framework.git
    id: .ctor
    path: ../src/Catalyst.Core.Lib/IO/Handlers/CorrelationHandler.cs
    startLine: 38
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.IO.Handlers
  syntax:
    content: public CorrelationHandler(T messageCorrelationManager)
    parameters:
    - id: messageCorrelationManager
      type: '{T}'
    content.vb: Public Sub New(messageCorrelationManager As T)
  overload: Catalyst.Core.Lib.IO.Handlers.CorrelationHandler`1.#ctor*
  nameWithType.vb: CorrelationHandler(Of T).CorrelationHandler(T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Catalyst.Core.Lib.IO.Handlers.CorrelationHandler(Of T).CorrelationHandler(T)
- uid: Catalyst.Core.Lib.IO.Handlers.CorrelationHandler`1.ChannelRead0(IChannelHandlerContext,ProtocolMessage)
  commentId: M:Catalyst.Core.Lib.IO.Handlers.CorrelationHandler`1.ChannelRead0(IChannelHandlerContext,ProtocolMessage)
  id: ChannelRead0(IChannelHandlerContext,ProtocolMessage)
  parent: Catalyst.Core.Lib.IO.Handlers.CorrelationHandler`1
  langs:
  - csharp
  - vb
  name: ChannelRead0(IChannelHandlerContext, ProtocolMessage)
  nameWithType: CorrelationHandler<T>.ChannelRead0(IChannelHandlerContext, ProtocolMessage)
  fullName: Catalyst.Core.Lib.IO.Handlers.CorrelationHandler<T>.ChannelRead0(IChannelHandlerContext, ProtocolMessage)
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Lib/IO/Handlers/CorrelationHandler.cs
      branch: gh-pages
      repo: https://github.com/catalyst-network/Catalyst.Framework.git
    id: ChannelRead0
    path: ../src/Catalyst.Core.Lib/IO/Handlers/CorrelationHandler.cs
    startLine: 50
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.IO.Handlers
  summary: "\nThe server should always correlate a response, if it can fire next pipeline, if not close the channel,\nIf the message is not a response (IE Request/Broadcast) it should pass on to the next handler without attempting to correlate.\n"
  example: []
  syntax:
    content: protected override void ChannelRead0(IChannelHandlerContext ctx, ProtocolMessage message)
    parameters:
    - id: ctx
      type: IChannelHandlerContext
      description: ''
    - id: message
      type: ProtocolMessage
      description: ''
    content.vb: Protected Overrides Sub ChannelRead0(ctx As IChannelHandlerContext, message As ProtocolMessage)
  overridden: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase{ProtocolMessage}.ChannelRead0(IChannelHandlerContext,ProtocolMessage)
  overload: Catalyst.Core.Lib.IO.Handlers.CorrelationHandler`1.ChannelRead0*
  nameWithType.vb: CorrelationHandler(Of T).ChannelRead0(IChannelHandlerContext, ProtocolMessage)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: Catalyst.Core.Lib.IO.Handlers.CorrelationHandler(Of T).ChannelRead0(IChannelHandlerContext, ProtocolMessage)
references:
- uid: Catalyst.Core.Lib.IO.Handlers
  commentId: N:Catalyst.Core.Lib.IO.Handlers
  name: Catalyst.Core.Lib.IO.Handlers
  nameWithType: Catalyst.Core.Lib.IO.Handlers
  fullName: Catalyst.Core.Lib.IO.Handlers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase{ProtocolMessage}
  commentId: T:Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase{ProtocolMessage}
  parent: Catalyst.Core.Lib.IO.Handlers
  definition: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase`1
  name: InboundChannelHandlerBase<ProtocolMessage>
  nameWithType: InboundChannelHandlerBase<ProtocolMessage>
  fullName: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase<ProtocolMessage>
  nameWithType.vb: InboundChannelHandlerBase(Of ProtocolMessage)
  fullName.vb: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase(Of ProtocolMessage)
  name.vb: InboundChannelHandlerBase(Of ProtocolMessage)
  spec.csharp:
  - uid: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase`1
    name: InboundChannelHandlerBase
    nameWithType: InboundChannelHandlerBase
    fullName: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase
  - name: <
    nameWithType: <
    fullName: <
  - uid: ProtocolMessage
    name: ProtocolMessage
    nameWithType: ProtocolMessage
    fullName: ProtocolMessage
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase`1
    name: InboundChannelHandlerBase
    nameWithType: InboundChannelHandlerBase
    fullName: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: ProtocolMessage
    name: ProtocolMessage
    nameWithType: ProtocolMessage
    fullName: ProtocolMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase{ProtocolMessage}.Logger
  commentId: F:Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase{ProtocolMessage}.Logger
  parent: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase{ProtocolMessage}
  definition: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase`1.Logger
  name: Logger
  nameWithType: InboundChannelHandlerBase<ProtocolMessage>.Logger
  fullName: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase<ProtocolMessage>.Logger
  nameWithType.vb: InboundChannelHandlerBase(Of ProtocolMessage).Logger
  fullName.vb: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase(Of ProtocolMessage).Logger
- uid: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase{ProtocolMessage}.ChannelRead(IChannelHandlerContext,System.Object)
  commentId: M:Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase{ProtocolMessage}.ChannelRead(IChannelHandlerContext,System.Object)
  parent: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase{ProtocolMessage}
  definition: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase`1.ChannelRead(IChannelHandlerContext,System.Object)
  name: ChannelRead(IChannelHandlerContext, Object)
  nameWithType: InboundChannelHandlerBase<ProtocolMessage>.ChannelRead(IChannelHandlerContext, Object)
  fullName: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase<ProtocolMessage>.ChannelRead(IChannelHandlerContext, System.Object)
  nameWithType.vb: InboundChannelHandlerBase(Of ProtocolMessage).ChannelRead(IChannelHandlerContext, Object)
  fullName.vb: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase(Of ProtocolMessage).ChannelRead(IChannelHandlerContext, System.Object)
  spec.csharp:
  - uid: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase`1.ChannelRead(IChannelHandlerContext,System.Object)
    name: ChannelRead
    nameWithType: InboundChannelHandlerBase<ProtocolMessage>.ChannelRead
    fullName: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase<ProtocolMessage>.ChannelRead
  - name: (
    nameWithType: (
    fullName: (
  - uid: IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: IChannelHandlerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase`1.ChannelRead(IChannelHandlerContext,System.Object)
    name: ChannelRead
    nameWithType: InboundChannelHandlerBase(Of ProtocolMessage).ChannelRead
    fullName: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase(Of ProtocolMessage).ChannelRead
  - name: (
    nameWithType: (
    fullName: (
  - uid: IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: IChannelHandlerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase`1
  commentId: T:Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase`1
  name: InboundChannelHandlerBase<T>
  nameWithType: InboundChannelHandlerBase<T>
  fullName: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase<T>
  nameWithType.vb: InboundChannelHandlerBase(Of T)
  fullName.vb: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase(Of T)
  name.vb: InboundChannelHandlerBase(Of T)
  spec.csharp:
  - uid: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase`1
    name: InboundChannelHandlerBase
    nameWithType: InboundChannelHandlerBase
    fullName: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase`1
    name: InboundChannelHandlerBase
    nameWithType: InboundChannelHandlerBase
    fullName: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase`1.Logger
  commentId: F:Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase`1.Logger
  name: Logger
  nameWithType: InboundChannelHandlerBase<T>.Logger
  fullName: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase<T>.Logger
  nameWithType.vb: InboundChannelHandlerBase(Of T).Logger
  fullName.vb: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase(Of T).Logger
- uid: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase`1.ChannelRead(IChannelHandlerContext,System.Object)
  commentId: M:Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase`1.ChannelRead(IChannelHandlerContext,System.Object)
  isExternal: true
  name: ChannelRead(IChannelHandlerContext, Object)
  nameWithType: InboundChannelHandlerBase<T>.ChannelRead(IChannelHandlerContext, Object)
  fullName: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase<T>.ChannelRead(IChannelHandlerContext, System.Object)
  nameWithType.vb: InboundChannelHandlerBase(Of T).ChannelRead(IChannelHandlerContext, Object)
  fullName.vb: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase(Of T).ChannelRead(IChannelHandlerContext, System.Object)
  spec.csharp:
  - uid: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase`1.ChannelRead(IChannelHandlerContext,System.Object)
    name: ChannelRead
    nameWithType: InboundChannelHandlerBase<T>.ChannelRead
    fullName: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase<T>.ChannelRead
  - name: (
    nameWithType: (
    fullName: (
  - uid: IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: IChannelHandlerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase`1.ChannelRead(IChannelHandlerContext,System.Object)
    name: ChannelRead
    nameWithType: InboundChannelHandlerBase(Of T).ChannelRead
    fullName: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase(Of T).ChannelRead
  - name: (
    nameWithType: (
    fullName: (
  - uid: IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: IChannelHandlerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Lib.IO.Handlers.CorrelationHandler`1.#ctor*
  commentId: Overload:Catalyst.Core.Lib.IO.Handlers.CorrelationHandler`1.#ctor
  name: CorrelationHandler
  nameWithType: CorrelationHandler<T>.CorrelationHandler
  fullName: Catalyst.Core.Lib.IO.Handlers.CorrelationHandler<T>.CorrelationHandler
  nameWithType.vb: CorrelationHandler(Of T).CorrelationHandler
  fullName.vb: Catalyst.Core.Lib.IO.Handlers.CorrelationHandler(Of T).CorrelationHandler
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase{ProtocolMessage}.ChannelRead0(IChannelHandlerContext,ProtocolMessage)
  commentId: M:Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase{ProtocolMessage}.ChannelRead0(IChannelHandlerContext,ProtocolMessage)
  parent: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase{ProtocolMessage}
  definition: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase`1.ChannelRead0(IChannelHandlerContext,`0)
  name: ChannelRead0(IChannelHandlerContext, ProtocolMessage)
  nameWithType: InboundChannelHandlerBase<ProtocolMessage>.ChannelRead0(IChannelHandlerContext, ProtocolMessage)
  fullName: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase<ProtocolMessage>.ChannelRead0(IChannelHandlerContext, ProtocolMessage)
  nameWithType.vb: InboundChannelHandlerBase(Of ProtocolMessage).ChannelRead0(IChannelHandlerContext, ProtocolMessage)
  fullName.vb: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase(Of ProtocolMessage).ChannelRead0(IChannelHandlerContext, ProtocolMessage)
  spec.csharp:
  - uid: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase`1.ChannelRead0(IChannelHandlerContext,`0)
    name: ChannelRead0
    nameWithType: InboundChannelHandlerBase<ProtocolMessage>.ChannelRead0
    fullName: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase<ProtocolMessage>.ChannelRead0
  - name: (
    nameWithType: (
    fullName: (
  - uid: IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: IChannelHandlerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: ProtocolMessage
    name: ProtocolMessage
    nameWithType: ProtocolMessage
    fullName: ProtocolMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase`1.ChannelRead0(IChannelHandlerContext,`0)
    name: ChannelRead0
    nameWithType: InboundChannelHandlerBase(Of ProtocolMessage).ChannelRead0
    fullName: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase(Of ProtocolMessage).ChannelRead0
  - name: (
    nameWithType: (
    fullName: (
  - uid: IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: IChannelHandlerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: ProtocolMessage
    name: ProtocolMessage
    nameWithType: ProtocolMessage
    fullName: ProtocolMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Lib.IO.Handlers.CorrelationHandler`1.ChannelRead0*
  commentId: Overload:Catalyst.Core.Lib.IO.Handlers.CorrelationHandler`1.ChannelRead0
  name: ChannelRead0
  nameWithType: CorrelationHandler<T>.ChannelRead0
  fullName: Catalyst.Core.Lib.IO.Handlers.CorrelationHandler<T>.ChannelRead0
  nameWithType.vb: CorrelationHandler(Of T).ChannelRead0
  fullName.vb: Catalyst.Core.Lib.IO.Handlers.CorrelationHandler(Of T).ChannelRead0
- uid: IChannelHandlerContext
  isExternal: true
  name: IChannelHandlerContext
  nameWithType: IChannelHandlerContext
  fullName: IChannelHandlerContext
- uid: ProtocolMessage
  isExternal: true
  name: ProtocolMessage
  nameWithType: ProtocolMessage
  fullName: ProtocolMessage
- uid: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase`1.ChannelRead0(IChannelHandlerContext,`0)
  commentId: M:Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase`1.ChannelRead0(IChannelHandlerContext,`0)
  isExternal: true
  name: ChannelRead0(IChannelHandlerContext, T)
  nameWithType: InboundChannelHandlerBase<T>.ChannelRead0(IChannelHandlerContext, T)
  fullName: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase<T>.ChannelRead0(IChannelHandlerContext, T)
  nameWithType.vb: InboundChannelHandlerBase(Of T).ChannelRead0(IChannelHandlerContext, T)
  fullName.vb: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase(Of T).ChannelRead0(IChannelHandlerContext, T)
  spec.csharp:
  - uid: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase`1.ChannelRead0(IChannelHandlerContext,`0)
    name: ChannelRead0
    nameWithType: InboundChannelHandlerBase<T>.ChannelRead0
    fullName: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase<T>.ChannelRead0
  - name: (
    nameWithType: (
    fullName: (
  - uid: IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: IChannelHandlerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase`1.ChannelRead0(IChannelHandlerContext,`0)
    name: ChannelRead0
    nameWithType: InboundChannelHandlerBase(Of T).ChannelRead0
    fullName: Catalyst.Core.Lib.IO.Handlers.InboundChannelHandlerBase(Of T).ChannelRead0
  - name: (
    nameWithType: (
    fullName: (
  - uid: IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: IChannelHandlerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
