### YamlMime:ManagedReference
items:
- uid: Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao
  commentId: T:Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao
  id: ProtocolErrorMessageSignedDao
  parent: Catalyst.Core.Lib.DAO
  children:
  - Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao.Code
  - Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao.CorrelationId
  - Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao.InitMappers(IMapperConfigurationExpression)
  - Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao.PeerId
  - Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao.Signature
  langs:
  - csharp
  - vb
  name: ProtocolErrorMessageSignedDao
  nameWithType: ProtocolErrorMessageSignedDao
  fullName: Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao
  type: Class
  source:
    remote:
      path: src/Catalyst.Core.Lib/DAO/ProtocolErrorMessageSignedDao.cs
      branch: gh-pages
      repo: https://github.com/catalyst-network/Catalyst.Framework.git
    id: ProtocolErrorMessageSignedDao
    path: ../src/Catalyst.Core.Lib/DAO/ProtocolErrorMessageSignedDao.cs
    startLine: 31
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.DAO
  syntax:
    content: 'public class ProtocolErrorMessageSignedDao : DaoBase<ProtocolErrorMessage, ProtocolErrorMessageSignedDao>, IMapperInitializer, IValueConverter<ProtocolErrorMessage, ProtocolErrorMessageSignedDao>'
    content.vb: >-
      Public Class ProtocolErrorMessageSignedDao

          Inherits DaoBase(Of ProtocolErrorMessage, ProtocolErrorMessageSignedDao)

          Implements IMapperInitializer, IValueConverter(Of ProtocolErrorMessage, ProtocolErrorMessageSignedDao)
  inheritance:
  - System.Object
  - Catalyst.Core.Lib.DAO.DaoBase{ProtocolErrorMessage,Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao}
  implements:
  - Catalyst.Abstractions.DAO.IMapperInitializer
  - IValueConverter{ProtocolErrorMessage,Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao}
  inheritedMembers:
  - Catalyst.Core.Lib.DAO.DaoBase{ProtocolErrorMessage,Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao}.Id
  - Catalyst.Core.Lib.DAO.DaoBase{ProtocolErrorMessage,Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao}.ToProtoBuff
  - Catalyst.Core.Lib.DAO.DaoBase{ProtocolErrorMessage,Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao}.ToDao(ProtocolErrorMessage)
  - Catalyst.Core.Lib.DAO.DaoBase{ProtocolErrorMessage,Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao}.InitMappers(IMapperConfigurationExpression)
  - Catalyst.Core.Lib.DAO.DaoBase{ProtocolErrorMessage,Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao}.Convert(ProtocolErrorMessage,ResolutionContext)
  - Catalyst.Core.Lib.DAO.DaoBase{ProtocolErrorMessage,Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao}.Convert(Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao,ResolutionContext)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao.Signature
  commentId: P:Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao.Signature
  id: Signature
  parent: Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao
  langs:
  - csharp
  - vb
  name: Signature
  nameWithType: ProtocolErrorMessageSignedDao.Signature
  fullName: Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao.Signature
  type: Property
  source:
    remote:
      path: src/Catalyst.Core.Lib/DAO/ProtocolErrorMessageSignedDao.cs
      branch: gh-pages
      repo: https://github.com/catalyst-network/Catalyst.Framework.git
    id: Signature
    path: ../src/Catalyst.Core.Lib/DAO/ProtocolErrorMessageSignedDao.cs
    startLine: 33
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.DAO
  syntax:
    content: public Signature Signature { get; set; }
    parameters: []
    return:
      type: Signature
    content.vb: Public Property Signature As Signature
  overload: Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao.Signature*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao.PeerId
  commentId: P:Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao.PeerId
  id: PeerId
  parent: Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao
  langs:
  - csharp
  - vb
  name: PeerId
  nameWithType: ProtocolErrorMessageSignedDao.PeerId
  fullName: Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao.PeerId
  type: Property
  source:
    remote:
      path: src/Catalyst.Core.Lib/DAO/ProtocolErrorMessageSignedDao.cs
      branch: gh-pages
      repo: https://github.com/catalyst-network/Catalyst.Framework.git
    id: PeerId
    path: ../src/Catalyst.Core.Lib/DAO/ProtocolErrorMessageSignedDao.cs
    startLine: 34
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.DAO
  syntax:
    content: public PeerIdDao PeerId { get; set; }
    parameters: []
    return:
      type: Catalyst.Core.Lib.DAO.PeerIdDao
    content.vb: Public Property PeerId As PeerIdDao
  overload: Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao.PeerId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao.CorrelationId
  commentId: P:Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao.CorrelationId
  id: CorrelationId
  parent: Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao
  langs:
  - csharp
  - vb
  name: CorrelationId
  nameWithType: ProtocolErrorMessageSignedDao.CorrelationId
  fullName: Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao.CorrelationId
  type: Property
  source:
    remote:
      path: src/Catalyst.Core.Lib/DAO/ProtocolErrorMessageSignedDao.cs
      branch: gh-pages
      repo: https://github.com/catalyst-network/Catalyst.Framework.git
    id: CorrelationId
    path: ../src/Catalyst.Core.Lib/DAO/ProtocolErrorMessageSignedDao.cs
    startLine: 35
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.DAO
  syntax:
    content: public string CorrelationId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property CorrelationId As String
  overload: Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao.CorrelationId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao.Code
  commentId: P:Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao.Code
  id: Code
  parent: Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao
  langs:
  - csharp
  - vb
  name: Code
  nameWithType: ProtocolErrorMessageSignedDao.Code
  fullName: Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao.Code
  type: Property
  source:
    remote:
      path: src/Catalyst.Core.Lib/DAO/ProtocolErrorMessageSignedDao.cs
      branch: gh-pages
      repo: https://github.com/catalyst-network/Catalyst.Framework.git
    id: Code
    path: ../src/Catalyst.Core.Lib/DAO/ProtocolErrorMessageSignedDao.cs
    startLine: 36
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.DAO
  syntax:
    content: public int Code { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Code As Integer
  overload: Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao.Code*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao.InitMappers(IMapperConfigurationExpression)
  commentId: M:Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao.InitMappers(IMapperConfigurationExpression)
  id: InitMappers(IMapperConfigurationExpression)
  parent: Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao
  langs:
  - csharp
  - vb
  name: InitMappers(IMapperConfigurationExpression)
  nameWithType: ProtocolErrorMessageSignedDao.InitMappers(IMapperConfigurationExpression)
  fullName: Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao.InitMappers(IMapperConfigurationExpression)
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Lib/DAO/ProtocolErrorMessageSignedDao.cs
      branch: gh-pages
      repo: https://github.com/catalyst-network/Catalyst.Framework.git
    id: InitMappers
    path: ../src/Catalyst.Core.Lib/DAO/ProtocolErrorMessageSignedDao.cs
    startLine: 38
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.DAO
  syntax:
    content: public override void InitMappers(IMapperConfigurationExpression cfg)
    parameters:
    - id: cfg
      type: IMapperConfigurationExpression
    content.vb: Public Overrides Sub InitMappers(cfg As IMapperConfigurationExpression)
  overridden: Catalyst.Core.Lib.DAO.DaoBase{ProtocolErrorMessage,Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao}.InitMappers(IMapperConfigurationExpression)
  overload: Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao.InitMappers*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Catalyst.Core.Lib.DAO
  commentId: N:Catalyst.Core.Lib.DAO
  name: Catalyst.Core.Lib.DAO
  nameWithType: Catalyst.Core.Lib.DAO
  fullName: Catalyst.Core.Lib.DAO
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Catalyst.Core.Lib.DAO.DaoBase{ProtocolErrorMessage,Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao}
  commentId: T:Catalyst.Core.Lib.DAO.DaoBase{ProtocolErrorMessage,Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao}
  parent: Catalyst.Core.Lib.DAO
  definition: Catalyst.Core.Lib.DAO.DaoBase`2
  name: DaoBase<ProtocolErrorMessage, ProtocolErrorMessageSignedDao>
  nameWithType: DaoBase<ProtocolErrorMessage, ProtocolErrorMessageSignedDao>
  fullName: Catalyst.Core.Lib.DAO.DaoBase<ProtocolErrorMessage, Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao>
  nameWithType.vb: DaoBase(Of ProtocolErrorMessage, ProtocolErrorMessageSignedDao)
  fullName.vb: Catalyst.Core.Lib.DAO.DaoBase(Of ProtocolErrorMessage, Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao)
  name.vb: DaoBase(Of ProtocolErrorMessage, ProtocolErrorMessageSignedDao)
  spec.csharp:
  - uid: Catalyst.Core.Lib.DAO.DaoBase`2
    name: DaoBase
    nameWithType: DaoBase
    fullName: Catalyst.Core.Lib.DAO.DaoBase
  - name: <
    nameWithType: <
    fullName: <
  - uid: ProtocolErrorMessage
    name: ProtocolErrorMessage
    nameWithType: ProtocolErrorMessage
    fullName: ProtocolErrorMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao
    name: ProtocolErrorMessageSignedDao
    nameWithType: ProtocolErrorMessageSignedDao
    fullName: Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Catalyst.Core.Lib.DAO.DaoBase`2
    name: DaoBase
    nameWithType: DaoBase
    fullName: Catalyst.Core.Lib.DAO.DaoBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: ProtocolErrorMessage
    name: ProtocolErrorMessage
    nameWithType: ProtocolErrorMessage
    fullName: ProtocolErrorMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao
    name: ProtocolErrorMessageSignedDao
    nameWithType: ProtocolErrorMessageSignedDao
    fullName: Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Abstractions.DAO.IMapperInitializer
  commentId: T:Catalyst.Abstractions.DAO.IMapperInitializer
  parent: Catalyst.Abstractions.DAO
  name: IMapperInitializer
  nameWithType: IMapperInitializer
  fullName: Catalyst.Abstractions.DAO.IMapperInitializer
- uid: IValueConverter{ProtocolErrorMessage,Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao}
  commentId: '!:IValueConverter{ProtocolErrorMessage,Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao}'
  definition: IValueConverter`2
  name: IValueConverter<ProtocolErrorMessage, ProtocolErrorMessageSignedDao>
  nameWithType: IValueConverter<ProtocolErrorMessage, ProtocolErrorMessageSignedDao>
  fullName: IValueConverter<ProtocolErrorMessage, Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao>
  nameWithType.vb: IValueConverter(Of ProtocolErrorMessage, ProtocolErrorMessageSignedDao)
  fullName.vb: IValueConverter(Of ProtocolErrorMessage, Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao)
  name.vb: IValueConverter(Of ProtocolErrorMessage, ProtocolErrorMessageSignedDao)
  spec.csharp:
  - uid: IValueConverter`2
    name: IValueConverter
    nameWithType: IValueConverter
    fullName: IValueConverter
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: ProtocolErrorMessage
    name: ProtocolErrorMessage
    nameWithType: ProtocolErrorMessage
    fullName: ProtocolErrorMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao
    name: ProtocolErrorMessageSignedDao
    nameWithType: ProtocolErrorMessageSignedDao
    fullName: Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IValueConverter`2
    name: IValueConverter
    nameWithType: IValueConverter
    fullName: IValueConverter
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: ProtocolErrorMessage
    name: ProtocolErrorMessage
    nameWithType: ProtocolErrorMessage
    fullName: ProtocolErrorMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao
    name: ProtocolErrorMessageSignedDao
    nameWithType: ProtocolErrorMessageSignedDao
    fullName: Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Lib.DAO.DaoBase{ProtocolErrorMessage,Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao}.Id
  commentId: P:Catalyst.Core.Lib.DAO.DaoBase{ProtocolErrorMessage,Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao}.Id
  parent: Catalyst.Core.Lib.DAO.DaoBase{ProtocolErrorMessage,Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao}
  definition: Catalyst.Core.Lib.DAO.DaoBase`2.Id
  name: Id
  nameWithType: DaoBase<ProtocolErrorMessage, ProtocolErrorMessageSignedDao>.Id
  fullName: Catalyst.Core.Lib.DAO.DaoBase<ProtocolErrorMessage, Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao>.Id
  nameWithType.vb: DaoBase(Of ProtocolErrorMessage, ProtocolErrorMessageSignedDao).Id
  fullName.vb: Catalyst.Core.Lib.DAO.DaoBase(Of ProtocolErrorMessage, Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao).Id
- uid: Catalyst.Core.Lib.DAO.DaoBase{ProtocolErrorMessage,Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao}.ToProtoBuff
  commentId: M:Catalyst.Core.Lib.DAO.DaoBase{ProtocolErrorMessage,Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao}.ToProtoBuff
  parent: Catalyst.Core.Lib.DAO.DaoBase{ProtocolErrorMessage,Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao}
  definition: Catalyst.Core.Lib.DAO.DaoBase`2.ToProtoBuff
  name: ToProtoBuff()
  nameWithType: DaoBase<ProtocolErrorMessage, ProtocolErrorMessageSignedDao>.ToProtoBuff()
  fullName: Catalyst.Core.Lib.DAO.DaoBase<ProtocolErrorMessage, Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao>.ToProtoBuff()
  nameWithType.vb: DaoBase(Of ProtocolErrorMessage, ProtocolErrorMessageSignedDao).ToProtoBuff()
  fullName.vb: Catalyst.Core.Lib.DAO.DaoBase(Of ProtocolErrorMessage, Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao).ToProtoBuff()
  spec.csharp:
  - uid: Catalyst.Core.Lib.DAO.DaoBase`2.ToProtoBuff
    name: ToProtoBuff
    nameWithType: DaoBase<ProtocolErrorMessage, ProtocolErrorMessageSignedDao>.ToProtoBuff
    fullName: Catalyst.Core.Lib.DAO.DaoBase<ProtocolErrorMessage, Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao>.ToProtoBuff
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Core.Lib.DAO.DaoBase`2.ToProtoBuff
    name: ToProtoBuff
    nameWithType: DaoBase(Of ProtocolErrorMessage, ProtocolErrorMessageSignedDao).ToProtoBuff
    fullName: Catalyst.Core.Lib.DAO.DaoBase(Of ProtocolErrorMessage, Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao).ToProtoBuff
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Lib.DAO.DaoBase{ProtocolErrorMessage,Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao}.ToDao(ProtocolErrorMessage)
  commentId: M:Catalyst.Core.Lib.DAO.DaoBase{ProtocolErrorMessage,Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao}.ToDao(ProtocolErrorMessage)
  parent: Catalyst.Core.Lib.DAO.DaoBase{ProtocolErrorMessage,Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao}
  definition: Catalyst.Core.Lib.DAO.DaoBase`2.ToDao(`0)
  name: ToDao(ProtocolErrorMessage)
  nameWithType: DaoBase<ProtocolErrorMessage, ProtocolErrorMessageSignedDao>.ToDao(ProtocolErrorMessage)
  fullName: Catalyst.Core.Lib.DAO.DaoBase<ProtocolErrorMessage, Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao>.ToDao(ProtocolErrorMessage)
  nameWithType.vb: DaoBase(Of ProtocolErrorMessage, ProtocolErrorMessageSignedDao).ToDao(ProtocolErrorMessage)
  fullName.vb: Catalyst.Core.Lib.DAO.DaoBase(Of ProtocolErrorMessage, Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao).ToDao(ProtocolErrorMessage)
  spec.csharp:
  - uid: Catalyst.Core.Lib.DAO.DaoBase`2.ToDao(`0)
    name: ToDao
    nameWithType: DaoBase<ProtocolErrorMessage, ProtocolErrorMessageSignedDao>.ToDao
    fullName: Catalyst.Core.Lib.DAO.DaoBase<ProtocolErrorMessage, Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao>.ToDao
  - name: (
    nameWithType: (
    fullName: (
  - uid: ProtocolErrorMessage
    name: ProtocolErrorMessage
    nameWithType: ProtocolErrorMessage
    fullName: ProtocolErrorMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Core.Lib.DAO.DaoBase`2.ToDao(`0)
    name: ToDao
    nameWithType: DaoBase(Of ProtocolErrorMessage, ProtocolErrorMessageSignedDao).ToDao
    fullName: Catalyst.Core.Lib.DAO.DaoBase(Of ProtocolErrorMessage, Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao).ToDao
  - name: (
    nameWithType: (
    fullName: (
  - uid: ProtocolErrorMessage
    name: ProtocolErrorMessage
    nameWithType: ProtocolErrorMessage
    fullName: ProtocolErrorMessage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Lib.DAO.DaoBase{ProtocolErrorMessage,Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao}.InitMappers(IMapperConfigurationExpression)
  commentId: M:Catalyst.Core.Lib.DAO.DaoBase{ProtocolErrorMessage,Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao}.InitMappers(IMapperConfigurationExpression)
  parent: Catalyst.Core.Lib.DAO.DaoBase{ProtocolErrorMessage,Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao}
  definition: Catalyst.Core.Lib.DAO.DaoBase`2.InitMappers(IMapperConfigurationExpression)
  name: InitMappers(IMapperConfigurationExpression)
  nameWithType: DaoBase<ProtocolErrorMessage, ProtocolErrorMessageSignedDao>.InitMappers(IMapperConfigurationExpression)
  fullName: Catalyst.Core.Lib.DAO.DaoBase<ProtocolErrorMessage, Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao>.InitMappers(IMapperConfigurationExpression)
  nameWithType.vb: DaoBase(Of ProtocolErrorMessage, ProtocolErrorMessageSignedDao).InitMappers(IMapperConfigurationExpression)
  fullName.vb: Catalyst.Core.Lib.DAO.DaoBase(Of ProtocolErrorMessage, Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao).InitMappers(IMapperConfigurationExpression)
  spec.csharp:
  - uid: Catalyst.Core.Lib.DAO.DaoBase`2.InitMappers(IMapperConfigurationExpression)
    name: InitMappers
    nameWithType: DaoBase<ProtocolErrorMessage, ProtocolErrorMessageSignedDao>.InitMappers
    fullName: Catalyst.Core.Lib.DAO.DaoBase<ProtocolErrorMessage, Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao>.InitMappers
  - name: (
    nameWithType: (
    fullName: (
  - uid: IMapperConfigurationExpression
    name: IMapperConfigurationExpression
    nameWithType: IMapperConfigurationExpression
    fullName: IMapperConfigurationExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Core.Lib.DAO.DaoBase`2.InitMappers(IMapperConfigurationExpression)
    name: InitMappers
    nameWithType: DaoBase(Of ProtocolErrorMessage, ProtocolErrorMessageSignedDao).InitMappers
    fullName: Catalyst.Core.Lib.DAO.DaoBase(Of ProtocolErrorMessage, Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao).InitMappers
  - name: (
    nameWithType: (
    fullName: (
  - uid: IMapperConfigurationExpression
    name: IMapperConfigurationExpression
    nameWithType: IMapperConfigurationExpression
    fullName: IMapperConfigurationExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Lib.DAO.DaoBase{ProtocolErrorMessage,Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao}.Convert(ProtocolErrorMessage,ResolutionContext)
  commentId: M:Catalyst.Core.Lib.DAO.DaoBase{ProtocolErrorMessage,Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao}.Convert(ProtocolErrorMessage,ResolutionContext)
  parent: Catalyst.Core.Lib.DAO.DaoBase{ProtocolErrorMessage,Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao}
  definition: Catalyst.Core.Lib.DAO.DaoBase`2.Convert(`0,ResolutionContext)
  name: Convert(ProtocolErrorMessage, ResolutionContext)
  nameWithType: DaoBase<ProtocolErrorMessage, ProtocolErrorMessageSignedDao>.Convert(ProtocolErrorMessage, ResolutionContext)
  fullName: Catalyst.Core.Lib.DAO.DaoBase<ProtocolErrorMessage, Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao>.Convert(ProtocolErrorMessage, ResolutionContext)
  nameWithType.vb: DaoBase(Of ProtocolErrorMessage, ProtocolErrorMessageSignedDao).Convert(ProtocolErrorMessage, ResolutionContext)
  fullName.vb: Catalyst.Core.Lib.DAO.DaoBase(Of ProtocolErrorMessage, Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao).Convert(ProtocolErrorMessage, ResolutionContext)
  spec.csharp:
  - uid: Catalyst.Core.Lib.DAO.DaoBase`2.Convert(`0,ResolutionContext)
    name: Convert
    nameWithType: DaoBase<ProtocolErrorMessage, ProtocolErrorMessageSignedDao>.Convert
    fullName: Catalyst.Core.Lib.DAO.DaoBase<ProtocolErrorMessage, Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao>.Convert
  - name: (
    nameWithType: (
    fullName: (
  - uid: ProtocolErrorMessage
    name: ProtocolErrorMessage
    nameWithType: ProtocolErrorMessage
    fullName: ProtocolErrorMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: ResolutionContext
    name: ResolutionContext
    nameWithType: ResolutionContext
    fullName: ResolutionContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Core.Lib.DAO.DaoBase`2.Convert(`0,ResolutionContext)
    name: Convert
    nameWithType: DaoBase(Of ProtocolErrorMessage, ProtocolErrorMessageSignedDao).Convert
    fullName: Catalyst.Core.Lib.DAO.DaoBase(Of ProtocolErrorMessage, Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao).Convert
  - name: (
    nameWithType: (
    fullName: (
  - uid: ProtocolErrorMessage
    name: ProtocolErrorMessage
    nameWithType: ProtocolErrorMessage
    fullName: ProtocolErrorMessage
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: ResolutionContext
    name: ResolutionContext
    nameWithType: ResolutionContext
    fullName: ResolutionContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Lib.DAO.DaoBase{ProtocolErrorMessage,Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao}.Convert(Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao,ResolutionContext)
  commentId: M:Catalyst.Core.Lib.DAO.DaoBase{ProtocolErrorMessage,Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao}.Convert(Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao,ResolutionContext)
  parent: Catalyst.Core.Lib.DAO.DaoBase{ProtocolErrorMessage,Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao}
  definition: Catalyst.Core.Lib.DAO.DaoBase`2.Convert(`1,ResolutionContext)
  name: Convert(ProtocolErrorMessageSignedDao, ResolutionContext)
  nameWithType: DaoBase<ProtocolErrorMessage, ProtocolErrorMessageSignedDao>.Convert(ProtocolErrorMessageSignedDao, ResolutionContext)
  fullName: Catalyst.Core.Lib.DAO.DaoBase<ProtocolErrorMessage, Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao>.Convert(Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao, ResolutionContext)
  nameWithType.vb: DaoBase(Of ProtocolErrorMessage, ProtocolErrorMessageSignedDao).Convert(ProtocolErrorMessageSignedDao, ResolutionContext)
  fullName.vb: Catalyst.Core.Lib.DAO.DaoBase(Of ProtocolErrorMessage, Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao).Convert(Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao, ResolutionContext)
  spec.csharp:
  - uid: Catalyst.Core.Lib.DAO.DaoBase`2.Convert(`1,ResolutionContext)
    name: Convert
    nameWithType: DaoBase<ProtocolErrorMessage, ProtocolErrorMessageSignedDao>.Convert
    fullName: Catalyst.Core.Lib.DAO.DaoBase<ProtocolErrorMessage, Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao>.Convert
  - name: (
    nameWithType: (
    fullName: (
  - uid: Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao
    name: ProtocolErrorMessageSignedDao
    nameWithType: ProtocolErrorMessageSignedDao
    fullName: Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: ResolutionContext
    name: ResolutionContext
    nameWithType: ResolutionContext
    fullName: ResolutionContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Core.Lib.DAO.DaoBase`2.Convert(`1,ResolutionContext)
    name: Convert
    nameWithType: DaoBase(Of ProtocolErrorMessage, ProtocolErrorMessageSignedDao).Convert
    fullName: Catalyst.Core.Lib.DAO.DaoBase(Of ProtocolErrorMessage, Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao).Convert
  - name: (
    nameWithType: (
    fullName: (
  - uid: Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao
    name: ProtocolErrorMessageSignedDao
    nameWithType: ProtocolErrorMessageSignedDao
    fullName: Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: ResolutionContext
    name: ResolutionContext
    nameWithType: ResolutionContext
    fullName: ResolutionContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Catalyst.Core.Lib.DAO.DaoBase`2
  commentId: T:Catalyst.Core.Lib.DAO.DaoBase`2
  name: DaoBase<TProto, TDao>
  nameWithType: DaoBase<TProto, TDao>
  fullName: Catalyst.Core.Lib.DAO.DaoBase<TProto, TDao>
  nameWithType.vb: DaoBase(Of TProto, TDao)
  fullName.vb: Catalyst.Core.Lib.DAO.DaoBase(Of TProto, TDao)
  name.vb: DaoBase(Of TProto, TDao)
  spec.csharp:
  - uid: Catalyst.Core.Lib.DAO.DaoBase`2
    name: DaoBase
    nameWithType: DaoBase
    fullName: Catalyst.Core.Lib.DAO.DaoBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TProto
    nameWithType: TProto
    fullName: TProto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDao
    nameWithType: TDao
    fullName: TDao
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Catalyst.Core.Lib.DAO.DaoBase`2
    name: DaoBase
    nameWithType: DaoBase
    fullName: Catalyst.Core.Lib.DAO.DaoBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TProto
    nameWithType: TProto
    fullName: TProto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDao
    nameWithType: TDao
    fullName: TDao
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Abstractions.DAO
  commentId: N:Catalyst.Abstractions.DAO
  name: Catalyst.Abstractions.DAO
  nameWithType: Catalyst.Abstractions.DAO
  fullName: Catalyst.Abstractions.DAO
- uid: IValueConverter`2
  isExternal: true
  name: IValueConverter<, >
  nameWithType: IValueConverter<, >
  fullName: IValueConverter<, >
  nameWithType.vb: IValueConverter(Of , )
  fullName.vb: IValueConverter(Of , )
  name.vb: IValueConverter(Of , )
  spec.csharp:
  - uid: IValueConverter`2
    name: IValueConverter
    nameWithType: IValueConverter
    fullName: IValueConverter
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IValueConverter`2
    name: IValueConverter
    nameWithType: IValueConverter
    fullName: IValueConverter
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Lib.DAO.DaoBase`2.Id
  commentId: P:Catalyst.Core.Lib.DAO.DaoBase`2.Id
  name: Id
  nameWithType: DaoBase<TProto, TDao>.Id
  fullName: Catalyst.Core.Lib.DAO.DaoBase<TProto, TDao>.Id
  nameWithType.vb: DaoBase(Of TProto, TDao).Id
  fullName.vb: Catalyst.Core.Lib.DAO.DaoBase(Of TProto, TDao).Id
- uid: Catalyst.Core.Lib.DAO.DaoBase`2.ToProtoBuff
  commentId: M:Catalyst.Core.Lib.DAO.DaoBase`2.ToProtoBuff
  name: ToProtoBuff()
  nameWithType: DaoBase<TProto, TDao>.ToProtoBuff()
  fullName: Catalyst.Core.Lib.DAO.DaoBase<TProto, TDao>.ToProtoBuff()
  nameWithType.vb: DaoBase(Of TProto, TDao).ToProtoBuff()
  fullName.vb: Catalyst.Core.Lib.DAO.DaoBase(Of TProto, TDao).ToProtoBuff()
  spec.csharp:
  - uid: Catalyst.Core.Lib.DAO.DaoBase`2.ToProtoBuff
    name: ToProtoBuff
    nameWithType: DaoBase<TProto, TDao>.ToProtoBuff
    fullName: Catalyst.Core.Lib.DAO.DaoBase<TProto, TDao>.ToProtoBuff
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Core.Lib.DAO.DaoBase`2.ToProtoBuff
    name: ToProtoBuff
    nameWithType: DaoBase(Of TProto, TDao).ToProtoBuff
    fullName: Catalyst.Core.Lib.DAO.DaoBase(Of TProto, TDao).ToProtoBuff
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Lib.DAO.DaoBase`2.ToDao(`0)
  commentId: M:Catalyst.Core.Lib.DAO.DaoBase`2.ToDao(`0)
  name: ToDao(TProto)
  nameWithType: DaoBase<TProto, TDao>.ToDao(TProto)
  fullName: Catalyst.Core.Lib.DAO.DaoBase<TProto, TDao>.ToDao(TProto)
  nameWithType.vb: DaoBase(Of TProto, TDao).ToDao(TProto)
  fullName.vb: Catalyst.Core.Lib.DAO.DaoBase(Of TProto, TDao).ToDao(TProto)
  spec.csharp:
  - uid: Catalyst.Core.Lib.DAO.DaoBase`2.ToDao(`0)
    name: ToDao
    nameWithType: DaoBase<TProto, TDao>.ToDao
    fullName: Catalyst.Core.Lib.DAO.DaoBase<TProto, TDao>.ToDao
  - name: (
    nameWithType: (
    fullName: (
  - name: TProto
    nameWithType: TProto
    fullName: TProto
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Core.Lib.DAO.DaoBase`2.ToDao(`0)
    name: ToDao
    nameWithType: DaoBase(Of TProto, TDao).ToDao
    fullName: Catalyst.Core.Lib.DAO.DaoBase(Of TProto, TDao).ToDao
  - name: (
    nameWithType: (
    fullName: (
  - name: TProto
    nameWithType: TProto
    fullName: TProto
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Lib.DAO.DaoBase`2.InitMappers(IMapperConfigurationExpression)
  commentId: M:Catalyst.Core.Lib.DAO.DaoBase`2.InitMappers(IMapperConfigurationExpression)
  isExternal: true
  name: InitMappers(IMapperConfigurationExpression)
  nameWithType: DaoBase<TProto, TDao>.InitMappers(IMapperConfigurationExpression)
  fullName: Catalyst.Core.Lib.DAO.DaoBase<TProto, TDao>.InitMappers(IMapperConfigurationExpression)
  nameWithType.vb: DaoBase(Of TProto, TDao).InitMappers(IMapperConfigurationExpression)
  fullName.vb: Catalyst.Core.Lib.DAO.DaoBase(Of TProto, TDao).InitMappers(IMapperConfigurationExpression)
  spec.csharp:
  - uid: Catalyst.Core.Lib.DAO.DaoBase`2.InitMappers(IMapperConfigurationExpression)
    name: InitMappers
    nameWithType: DaoBase<TProto, TDao>.InitMappers
    fullName: Catalyst.Core.Lib.DAO.DaoBase<TProto, TDao>.InitMappers
  - name: (
    nameWithType: (
    fullName: (
  - uid: IMapperConfigurationExpression
    name: IMapperConfigurationExpression
    nameWithType: IMapperConfigurationExpression
    fullName: IMapperConfigurationExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Core.Lib.DAO.DaoBase`2.InitMappers(IMapperConfigurationExpression)
    name: InitMappers
    nameWithType: DaoBase(Of TProto, TDao).InitMappers
    fullName: Catalyst.Core.Lib.DAO.DaoBase(Of TProto, TDao).InitMappers
  - name: (
    nameWithType: (
    fullName: (
  - uid: IMapperConfigurationExpression
    name: IMapperConfigurationExpression
    nameWithType: IMapperConfigurationExpression
    fullName: IMapperConfigurationExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Lib.DAO.DaoBase`2.Convert(`0,ResolutionContext)
  commentId: M:Catalyst.Core.Lib.DAO.DaoBase`2.Convert(`0,ResolutionContext)
  isExternal: true
  name: Convert(TProto, ResolutionContext)
  nameWithType: DaoBase<TProto, TDao>.Convert(TProto, ResolutionContext)
  fullName: Catalyst.Core.Lib.DAO.DaoBase<TProto, TDao>.Convert(TProto, ResolutionContext)
  nameWithType.vb: DaoBase(Of TProto, TDao).Convert(TProto, ResolutionContext)
  fullName.vb: Catalyst.Core.Lib.DAO.DaoBase(Of TProto, TDao).Convert(TProto, ResolutionContext)
  spec.csharp:
  - uid: Catalyst.Core.Lib.DAO.DaoBase`2.Convert(`0,ResolutionContext)
    name: Convert
    nameWithType: DaoBase<TProto, TDao>.Convert
    fullName: Catalyst.Core.Lib.DAO.DaoBase<TProto, TDao>.Convert
  - name: (
    nameWithType: (
    fullName: (
  - name: TProto
    nameWithType: TProto
    fullName: TProto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: ResolutionContext
    name: ResolutionContext
    nameWithType: ResolutionContext
    fullName: ResolutionContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Core.Lib.DAO.DaoBase`2.Convert(`0,ResolutionContext)
    name: Convert
    nameWithType: DaoBase(Of TProto, TDao).Convert
    fullName: Catalyst.Core.Lib.DAO.DaoBase(Of TProto, TDao).Convert
  - name: (
    nameWithType: (
    fullName: (
  - name: TProto
    nameWithType: TProto
    fullName: TProto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: ResolutionContext
    name: ResolutionContext
    nameWithType: ResolutionContext
    fullName: ResolutionContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Lib.DAO.DaoBase`2.Convert(`1,ResolutionContext)
  commentId: M:Catalyst.Core.Lib.DAO.DaoBase`2.Convert(`1,ResolutionContext)
  isExternal: true
  name: Convert(TDao, ResolutionContext)
  nameWithType: DaoBase<TProto, TDao>.Convert(TDao, ResolutionContext)
  fullName: Catalyst.Core.Lib.DAO.DaoBase<TProto, TDao>.Convert(TDao, ResolutionContext)
  nameWithType.vb: DaoBase(Of TProto, TDao).Convert(TDao, ResolutionContext)
  fullName.vb: Catalyst.Core.Lib.DAO.DaoBase(Of TProto, TDao).Convert(TDao, ResolutionContext)
  spec.csharp:
  - uid: Catalyst.Core.Lib.DAO.DaoBase`2.Convert(`1,ResolutionContext)
    name: Convert
    nameWithType: DaoBase<TProto, TDao>.Convert
    fullName: Catalyst.Core.Lib.DAO.DaoBase<TProto, TDao>.Convert
  - name: (
    nameWithType: (
    fullName: (
  - name: TDao
    nameWithType: TDao
    fullName: TDao
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: ResolutionContext
    name: ResolutionContext
    nameWithType: ResolutionContext
    fullName: ResolutionContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Core.Lib.DAO.DaoBase`2.Convert(`1,ResolutionContext)
    name: Convert
    nameWithType: DaoBase(Of TProto, TDao).Convert
    fullName: Catalyst.Core.Lib.DAO.DaoBase(Of TProto, TDao).Convert
  - name: (
    nameWithType: (
    fullName: (
  - name: TDao
    nameWithType: TDao
    fullName: TDao
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: ResolutionContext
    name: ResolutionContext
    nameWithType: ResolutionContext
    fullName: ResolutionContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao.Signature*
  commentId: Overload:Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao.Signature
  name: Signature
  nameWithType: ProtocolErrorMessageSignedDao.Signature
  fullName: Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao.Signature
- uid: Signature
  commentId: '!:Signature'
  isExternal: true
  name: Signature
  nameWithType: Signature
  fullName: Signature
- uid: Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao.PeerId*
  commentId: Overload:Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao.PeerId
  name: PeerId
  nameWithType: ProtocolErrorMessageSignedDao.PeerId
  fullName: Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao.PeerId
- uid: Catalyst.Core.Lib.DAO.PeerIdDao
  commentId: T:Catalyst.Core.Lib.DAO.PeerIdDao
  parent: Catalyst.Core.Lib.DAO
  name: PeerIdDao
  nameWithType: PeerIdDao
  fullName: Catalyst.Core.Lib.DAO.PeerIdDao
- uid: Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao.CorrelationId*
  commentId: Overload:Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao.CorrelationId
  name: CorrelationId
  nameWithType: ProtocolErrorMessageSignedDao.CorrelationId
  fullName: Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao.CorrelationId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao.Code*
  commentId: Overload:Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao.Code
  name: Code
  nameWithType: ProtocolErrorMessageSignedDao.Code
  fullName: Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao.Code
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao.InitMappers*
  commentId: Overload:Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao.InitMappers
  name: InitMappers
  nameWithType: ProtocolErrorMessageSignedDao.InitMappers
  fullName: Catalyst.Core.Lib.DAO.ProtocolErrorMessageSignedDao.InitMappers
- uid: IMapperConfigurationExpression
  isExternal: true
  name: IMapperConfigurationExpression
  nameWithType: IMapperConfigurationExpression
  fullName: IMapperConfigurationExpression
