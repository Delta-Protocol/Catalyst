### YamlMime:ManagedReference
items:
- uid: Catalyst.Core.Lib.IO.Messaging.Dto.BaseMessageDto`1
  commentId: T:Catalyst.Core.Lib.IO.Messaging.Dto.BaseMessageDto`1
  id: BaseMessageDto`1
  parent: Catalyst.Core.Lib.IO.Messaging.Dto
  children:
  - Catalyst.Core.Lib.IO.Messaging.Dto.BaseMessageDto`1.#ctor(`0,PeerId,PeerId,Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelationId)
  - Catalyst.Core.Lib.IO.Messaging.Dto.BaseMessageDto`1.CorrelationId
  - Catalyst.Core.Lib.IO.Messaging.Dto.BaseMessageDto`1.RecipientPeerIdentifier
  - Catalyst.Core.Lib.IO.Messaging.Dto.BaseMessageDto`1.SenderPeerIdentifier
  langs:
  - csharp
  - vb
  name: BaseMessageDto<T>
  nameWithType: BaseMessageDto<T>
  fullName: Catalyst.Core.Lib.IO.Messaging.Dto.BaseMessageDto<T>
  type: Class
  source:
    remote:
      path: src/Catalyst.Core.Lib/IO/Messaging/Dto/BaseMessageDto.cs
      branch: gh-pages
      repo: https://github.com/catalyst-network/Catalyst.Framework.git
    id: BaseMessageDto
    path: ../src/Catalyst.Core.Lib/IO/Messaging/Dto/BaseMessageDto.cs
    startLine: 32
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.IO.Messaging.Dto
  syntax:
    content: 'public class BaseMessageDto<T> : DefaultAddressedEnvelope<T>, IMessageDto<T>, IAddressedEnvelope<T> where T : IMessage<T>'
    typeParameters:
    - id: T
    content.vb: >-
      Public Class BaseMessageDto(Of T As IMessage(Of T))

          Inherits DefaultAddressedEnvelope(Of T)

          Implements IMessageDto(Of T), IAddressedEnvelope(Of T)
  inheritance:
  - System.Object
  derivedClasses:
  - Catalyst.Core.Lib.IO.Messaging.Dto.MessageDto
  - Catalyst.Core.Lib.IO.Messaging.Dto.SignedMessageDto
  implements:
  - Catalyst.Abstractions.IO.Messaging.Dto.IMessageDto{{T}}
  - IAddressedEnvelope{{T}}
  nameWithType.vb: BaseMessageDto(Of T)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Catalyst.Core.Lib.IO.Messaging.Dto.BaseMessageDto(Of T)
  name.vb: BaseMessageDto(Of T)
- uid: Catalyst.Core.Lib.IO.Messaging.Dto.BaseMessageDto`1.CorrelationId
  commentId: P:Catalyst.Core.Lib.IO.Messaging.Dto.BaseMessageDto`1.CorrelationId
  id: CorrelationId
  parent: Catalyst.Core.Lib.IO.Messaging.Dto.BaseMessageDto`1
  langs:
  - csharp
  - vb
  name: CorrelationId
  nameWithType: BaseMessageDto<T>.CorrelationId
  fullName: Catalyst.Core.Lib.IO.Messaging.Dto.BaseMessageDto<T>.CorrelationId
  type: Property
  source:
    remote:
      path: src/Catalyst.Core.Lib/IO/Messaging/Dto/BaseMessageDto.cs
      branch: gh-pages
      repo: https://github.com/catalyst-network/Catalyst.Framework.git
    id: CorrelationId
    path: ../src/Catalyst.Core.Lib/IO/Messaging/Dto/BaseMessageDto.cs
    startLine: 35
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.IO.Messaging.Dto
  syntax:
    content: public ICorrelationId CorrelationId { get; }
    parameters: []
    return:
      type: Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelationId
    content.vb: Public ReadOnly Property CorrelationId As ICorrelationId
  overload: Catalyst.Core.Lib.IO.Messaging.Dto.BaseMessageDto`1.CorrelationId*
  implements:
  - Catalyst.Abstractions.IO.Messaging.Dto.IMessageDto{{T}}.CorrelationId
  nameWithType.vb: BaseMessageDto(Of T).CorrelationId
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Catalyst.Core.Lib.IO.Messaging.Dto.BaseMessageDto(Of T).CorrelationId
- uid: Catalyst.Core.Lib.IO.Messaging.Dto.BaseMessageDto`1.RecipientPeerIdentifier
  commentId: P:Catalyst.Core.Lib.IO.Messaging.Dto.BaseMessageDto`1.RecipientPeerIdentifier
  id: RecipientPeerIdentifier
  parent: Catalyst.Core.Lib.IO.Messaging.Dto.BaseMessageDto`1
  langs:
  - csharp
  - vb
  name: RecipientPeerIdentifier
  nameWithType: BaseMessageDto<T>.RecipientPeerIdentifier
  fullName: Catalyst.Core.Lib.IO.Messaging.Dto.BaseMessageDto<T>.RecipientPeerIdentifier
  type: Property
  source:
    remote:
      path: src/Catalyst.Core.Lib/IO/Messaging/Dto/BaseMessageDto.cs
      branch: gh-pages
      repo: https://github.com/catalyst-network/Catalyst.Framework.git
    id: RecipientPeerIdentifier
    path: ../src/Catalyst.Core.Lib/IO/Messaging/Dto/BaseMessageDto.cs
    startLine: 36
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.IO.Messaging.Dto
  syntax:
    content: public PeerId RecipientPeerIdentifier { get; }
    parameters: []
    return:
      type: PeerId
    content.vb: Public ReadOnly Property RecipientPeerIdentifier As PeerId
  overload: Catalyst.Core.Lib.IO.Messaging.Dto.BaseMessageDto`1.RecipientPeerIdentifier*
  nameWithType.vb: BaseMessageDto(Of T).RecipientPeerIdentifier
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Catalyst.Core.Lib.IO.Messaging.Dto.BaseMessageDto(Of T).RecipientPeerIdentifier
- uid: Catalyst.Core.Lib.IO.Messaging.Dto.BaseMessageDto`1.SenderPeerIdentifier
  commentId: P:Catalyst.Core.Lib.IO.Messaging.Dto.BaseMessageDto`1.SenderPeerIdentifier
  id: SenderPeerIdentifier
  parent: Catalyst.Core.Lib.IO.Messaging.Dto.BaseMessageDto`1
  langs:
  - csharp
  - vb
  name: SenderPeerIdentifier
  nameWithType: BaseMessageDto<T>.SenderPeerIdentifier
  fullName: Catalyst.Core.Lib.IO.Messaging.Dto.BaseMessageDto<T>.SenderPeerIdentifier
  type: Property
  source:
    remote:
      path: src/Catalyst.Core.Lib/IO/Messaging/Dto/BaseMessageDto.cs
      branch: gh-pages
      repo: https://github.com/catalyst-network/Catalyst.Framework.git
    id: SenderPeerIdentifier
    path: ../src/Catalyst.Core.Lib/IO/Messaging/Dto/BaseMessageDto.cs
    startLine: 37
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.IO.Messaging.Dto
  syntax:
    content: public PeerId SenderPeerIdentifier { get; }
    parameters: []
    return:
      type: PeerId
    content.vb: Public ReadOnly Property SenderPeerIdentifier As PeerId
  overload: Catalyst.Core.Lib.IO.Messaging.Dto.BaseMessageDto`1.SenderPeerIdentifier*
  nameWithType.vb: BaseMessageDto(Of T).SenderPeerIdentifier
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Catalyst.Core.Lib.IO.Messaging.Dto.BaseMessageDto(Of T).SenderPeerIdentifier
- uid: Catalyst.Core.Lib.IO.Messaging.Dto.BaseMessageDto`1.#ctor(`0,PeerId,PeerId,Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelationId)
  commentId: M:Catalyst.Core.Lib.IO.Messaging.Dto.BaseMessageDto`1.#ctor(`0,PeerId,PeerId,Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelationId)
  id: '#ctor(`0,PeerId,PeerId,Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelationId)'
  parent: Catalyst.Core.Lib.IO.Messaging.Dto.BaseMessageDto`1
  langs:
  - csharp
  - vb
  name: BaseMessageDto(T, PeerId, PeerId, ICorrelationId)
  nameWithType: BaseMessageDto<T>.BaseMessageDto(T, PeerId, PeerId, ICorrelationId)
  fullName: Catalyst.Core.Lib.IO.Messaging.Dto.BaseMessageDto<T>.BaseMessageDto(T, PeerId, PeerId, Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelationId)
  type: Constructor
  source:
    remote:
      path: src/Catalyst.Core.Lib/IO/Messaging/Dto/BaseMessageDto.cs
      branch: gh-pages
      repo: https://github.com/catalyst-network/Catalyst.Framework.git
    id: .ctor
    path: ../src/Catalyst.Core.Lib/IO/Messaging/Dto/BaseMessageDto.cs
    startLine: 46
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.IO.Messaging.Dto
  summary: "\nData transfer object to wrap up all parameters for sending protocol messages into a MessageFactors.\n"
  example: []
  syntax:
    content: protected BaseMessageDto(T content, PeerId senderPeerIdentifier, PeerId recipientPeerIdentifier, ICorrelationId correlationId)
    parameters:
    - id: content
      type: '{T}'
      description: ''
    - id: senderPeerIdentifier
      type: PeerId
      description: ''
    - id: recipientPeerIdentifier
      type: PeerId
      description: ''
    - id: correlationId
      type: Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelationId
      description: ''
    content.vb: Protected Sub New(content As T, senderPeerIdentifier As PeerId, recipientPeerIdentifier As PeerId, correlationId As ICorrelationId)
  overload: Catalyst.Core.Lib.IO.Messaging.Dto.BaseMessageDto`1.#ctor*
  nameWithType.vb: BaseMessageDto(Of T).BaseMessageDto(T, PeerId, PeerId, ICorrelationId)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Catalyst.Core.Lib.IO.Messaging.Dto.BaseMessageDto(Of T).BaseMessageDto(T, PeerId, PeerId, Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelationId)
references:
- uid: Catalyst.Core.Lib.IO.Messaging.Dto
  commentId: N:Catalyst.Core.Lib.IO.Messaging.Dto
  name: Catalyst.Core.Lib.IO.Messaging.Dto
  nameWithType: Catalyst.Core.Lib.IO.Messaging.Dto
  fullName: Catalyst.Core.Lib.IO.Messaging.Dto
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Catalyst.Abstractions.IO.Messaging.Dto.IMessageDto{{T}}
  commentId: T:Catalyst.Abstractions.IO.Messaging.Dto.IMessageDto{`0}
  parent: Catalyst.Abstractions.IO.Messaging.Dto
  definition: Catalyst.Abstractions.IO.Messaging.Dto.IMessageDto`1
  name: IMessageDto<T>
  nameWithType: IMessageDto<T>
  fullName: Catalyst.Abstractions.IO.Messaging.Dto.IMessageDto<T>
  nameWithType.vb: IMessageDto(Of T)
  fullName.vb: Catalyst.Abstractions.IO.Messaging.Dto.IMessageDto(Of T)
  name.vb: IMessageDto(Of T)
  spec.csharp:
  - uid: Catalyst.Abstractions.IO.Messaging.Dto.IMessageDto`1
    name: IMessageDto
    nameWithType: IMessageDto
    fullName: Catalyst.Abstractions.IO.Messaging.Dto.IMessageDto
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Catalyst.Abstractions.IO.Messaging.Dto.IMessageDto`1
    name: IMessageDto
    nameWithType: IMessageDto
    fullName: Catalyst.Abstractions.IO.Messaging.Dto.IMessageDto
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: IAddressedEnvelope{{T}}
  commentId: '!:IAddressedEnvelope{`0}'
  definition: IAddressedEnvelope`1
  name: IAddressedEnvelope<T>
  nameWithType: IAddressedEnvelope<T>
  fullName: IAddressedEnvelope<T>
  nameWithType.vb: IAddressedEnvelope(Of T)
  fullName.vb: IAddressedEnvelope(Of T)
  name.vb: IAddressedEnvelope(Of T)
  spec.csharp:
  - uid: IAddressedEnvelope`1
    name: IAddressedEnvelope
    nameWithType: IAddressedEnvelope
    fullName: IAddressedEnvelope
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IAddressedEnvelope`1
    name: IAddressedEnvelope
    nameWithType: IAddressedEnvelope
    fullName: IAddressedEnvelope
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Catalyst.Abstractions.IO.Messaging.Dto.IMessageDto`1
  commentId: T:Catalyst.Abstractions.IO.Messaging.Dto.IMessageDto`1
  name: IMessageDto<T>
  nameWithType: IMessageDto<T>
  fullName: Catalyst.Abstractions.IO.Messaging.Dto.IMessageDto<T>
  nameWithType.vb: IMessageDto(Of T)
  fullName.vb: Catalyst.Abstractions.IO.Messaging.Dto.IMessageDto(Of T)
  name.vb: IMessageDto(Of T)
  spec.csharp:
  - uid: Catalyst.Abstractions.IO.Messaging.Dto.IMessageDto`1
    name: IMessageDto
    nameWithType: IMessageDto
    fullName: Catalyst.Abstractions.IO.Messaging.Dto.IMessageDto
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Catalyst.Abstractions.IO.Messaging.Dto.IMessageDto`1
    name: IMessageDto
    nameWithType: IMessageDto
    fullName: Catalyst.Abstractions.IO.Messaging.Dto.IMessageDto
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Abstractions.IO.Messaging.Dto
  commentId: N:Catalyst.Abstractions.IO.Messaging.Dto
  name: Catalyst.Abstractions.IO.Messaging.Dto
  nameWithType: Catalyst.Abstractions.IO.Messaging.Dto
  fullName: Catalyst.Abstractions.IO.Messaging.Dto
- uid: IAddressedEnvelope`1
  isExternal: true
  name: IAddressedEnvelope<>
  nameWithType: IAddressedEnvelope<>
  fullName: IAddressedEnvelope<>
  nameWithType.vb: IAddressedEnvelope(Of )
  fullName.vb: IAddressedEnvelope(Of )
  name.vb: IAddressedEnvelope(Of )
  spec.csharp:
  - uid: IAddressedEnvelope`1
    name: IAddressedEnvelope
    nameWithType: IAddressedEnvelope
    fullName: IAddressedEnvelope
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IAddressedEnvelope`1
    name: IAddressedEnvelope
    nameWithType: IAddressedEnvelope
    fullName: IAddressedEnvelope
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Lib.IO.Messaging.Dto.BaseMessageDto`1.CorrelationId*
  commentId: Overload:Catalyst.Core.Lib.IO.Messaging.Dto.BaseMessageDto`1.CorrelationId
  name: CorrelationId
  nameWithType: BaseMessageDto<T>.CorrelationId
  fullName: Catalyst.Core.Lib.IO.Messaging.Dto.BaseMessageDto<T>.CorrelationId
  nameWithType.vb: BaseMessageDto(Of T).CorrelationId
  fullName.vb: Catalyst.Core.Lib.IO.Messaging.Dto.BaseMessageDto(Of T).CorrelationId
- uid: Catalyst.Abstractions.IO.Messaging.Dto.IMessageDto{{T}}.CorrelationId
  commentId: P:Catalyst.Abstractions.IO.Messaging.Dto.IMessageDto{`0}.CorrelationId
  parent: Catalyst.Abstractions.IO.Messaging.Dto.IMessageDto{{T}}
  definition: Catalyst.Abstractions.IO.Messaging.Dto.IMessageDto`1.CorrelationId
  name: CorrelationId
  nameWithType: IMessageDto<T>.CorrelationId
  fullName: Catalyst.Abstractions.IO.Messaging.Dto.IMessageDto<T>.CorrelationId
  nameWithType.vb: IMessageDto(Of T).CorrelationId
  fullName.vb: Catalyst.Abstractions.IO.Messaging.Dto.IMessageDto(Of T).CorrelationId
- uid: Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelationId
  commentId: T:Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelationId
  parent: Catalyst.Abstractions.IO.Messaging.Correlation
  name: ICorrelationId
  nameWithType: ICorrelationId
  fullName: Catalyst.Abstractions.IO.Messaging.Correlation.ICorrelationId
- uid: Catalyst.Abstractions.IO.Messaging.Dto.IMessageDto`1.CorrelationId
  commentId: P:Catalyst.Abstractions.IO.Messaging.Dto.IMessageDto`1.CorrelationId
  name: CorrelationId
  nameWithType: IMessageDto<T>.CorrelationId
  fullName: Catalyst.Abstractions.IO.Messaging.Dto.IMessageDto<T>.CorrelationId
  nameWithType.vb: IMessageDto(Of T).CorrelationId
  fullName.vb: Catalyst.Abstractions.IO.Messaging.Dto.IMessageDto(Of T).CorrelationId
- uid: Catalyst.Abstractions.IO.Messaging.Correlation
  commentId: N:Catalyst.Abstractions.IO.Messaging.Correlation
  name: Catalyst.Abstractions.IO.Messaging.Correlation
  nameWithType: Catalyst.Abstractions.IO.Messaging.Correlation
  fullName: Catalyst.Abstractions.IO.Messaging.Correlation
- uid: Catalyst.Core.Lib.IO.Messaging.Dto.BaseMessageDto`1.RecipientPeerIdentifier*
  commentId: Overload:Catalyst.Core.Lib.IO.Messaging.Dto.BaseMessageDto`1.RecipientPeerIdentifier
  name: RecipientPeerIdentifier
  nameWithType: BaseMessageDto<T>.RecipientPeerIdentifier
  fullName: Catalyst.Core.Lib.IO.Messaging.Dto.BaseMessageDto<T>.RecipientPeerIdentifier
  nameWithType.vb: BaseMessageDto(Of T).RecipientPeerIdentifier
  fullName.vb: Catalyst.Core.Lib.IO.Messaging.Dto.BaseMessageDto(Of T).RecipientPeerIdentifier
- uid: PeerId
  isExternal: true
  name: PeerId
  nameWithType: PeerId
  fullName: PeerId
- uid: Catalyst.Core.Lib.IO.Messaging.Dto.BaseMessageDto`1.SenderPeerIdentifier*
  commentId: Overload:Catalyst.Core.Lib.IO.Messaging.Dto.BaseMessageDto`1.SenderPeerIdentifier
  name: SenderPeerIdentifier
  nameWithType: BaseMessageDto<T>.SenderPeerIdentifier
  fullName: Catalyst.Core.Lib.IO.Messaging.Dto.BaseMessageDto<T>.SenderPeerIdentifier
  nameWithType.vb: BaseMessageDto(Of T).SenderPeerIdentifier
  fullName.vb: Catalyst.Core.Lib.IO.Messaging.Dto.BaseMessageDto(Of T).SenderPeerIdentifier
- uid: Catalyst.Core.Lib.IO.Messaging.Dto.BaseMessageDto`1.#ctor*
  commentId: Overload:Catalyst.Core.Lib.IO.Messaging.Dto.BaseMessageDto`1.#ctor
  name: BaseMessageDto
  nameWithType: BaseMessageDto<T>.BaseMessageDto
  fullName: Catalyst.Core.Lib.IO.Messaging.Dto.BaseMessageDto<T>.BaseMessageDto
  nameWithType.vb: BaseMessageDto(Of T).BaseMessageDto
  fullName.vb: Catalyst.Core.Lib.IO.Messaging.Dto.BaseMessageDto(Of T).BaseMessageDto
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
