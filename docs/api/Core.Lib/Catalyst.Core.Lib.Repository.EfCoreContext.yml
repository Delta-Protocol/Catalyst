### YamlMime:ManagedReference
items:
- uid: Catalyst.Core.Lib.Repository.EfCoreContext
  commentId: T:Catalyst.Core.Lib.Repository.EfCoreContext
  id: EfCoreContext
  parent: Catalyst.Core.Lib.Repository
  children:
  - Catalyst.Core.Lib.Repository.EfCoreContext.#ctor(System.String)
  - Catalyst.Core.Lib.Repository.EfCoreContext.BaseEntryDaoStore
  - Catalyst.Core.Lib.Repository.EfCoreContext.ConfidentialEntryDaoStore
  - Catalyst.Core.Lib.Repository.EfCoreContext.ContractEntryDaoStore
  - Catalyst.Core.Lib.Repository.EfCoreContext.OnModelCreating(ModelBuilder)
  - Catalyst.Core.Lib.Repository.EfCoreContext.PeerDaoStore
  - Catalyst.Core.Lib.Repository.EfCoreContext.PeerIdDaoStore
  - Catalyst.Core.Lib.Repository.EfCoreContext.PublicEntryDaoStore
  - Catalyst.Core.Lib.Repository.EfCoreContext.SignatureDaoStore
  - Catalyst.Core.Lib.Repository.EfCoreContext.SigningContextDaoStore
  - Catalyst.Core.Lib.Repository.EfCoreContext.TransactionBroadcastStore
  langs:
  - csharp
  - vb
  name: EfCoreContext
  nameWithType: EfCoreContext
  fullName: Catalyst.Core.Lib.Repository.EfCoreContext
  type: Class
  source:
    remote:
      path: src/Catalyst.Core.Lib/Repository/EfCoreContext.cs
      branch: gh-pages
      repo: https://github.com/catalyst-network/Catalyst.Framework.git
    id: EfCoreContext
    path: ../src/Catalyst.Core.Lib/Repository/EfCoreContext.cs
    startLine: 35
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.Repository
  syntax:
    content: 'public sealed class EfCoreContext : EntityFrameworkCore.DbContext, IDbContext, IDisposable'
    content.vb: >-
      Public NotInheritable Class EfCoreContext

          Inherits EntityFrameworkCore.DbContext

          Implements IDbContext, IDisposable
  inheritance:
  - System.Object
  implements:
  - Catalyst.Core.Lib.Repository.IDbContext
  - System.IDisposable
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Catalyst.Core.Lib.Repository.EfCoreContext.#ctor(System.String)
  commentId: M:Catalyst.Core.Lib.Repository.EfCoreContext.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Catalyst.Core.Lib.Repository.EfCoreContext
  langs:
  - csharp
  - vb
  name: EfCoreContext(String)
  nameWithType: EfCoreContext.EfCoreContext(String)
  fullName: Catalyst.Core.Lib.Repository.EfCoreContext.EfCoreContext(System.String)
  type: Constructor
  source:
    remote:
      path: src/Catalyst.Core.Lib/Repository/EfCoreContext.cs
      branch: gh-pages
      repo: https://github.com/catalyst-network/Catalyst.Framework.git
    id: .ctor
    path: ../src/Catalyst.Core.Lib/Repository/EfCoreContext.cs
    startLine: 37
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.Repository
  syntax:
    content: public EfCoreContext(string connectionString)
    parameters:
    - id: connectionString
      type: System.String
    content.vb: Public Sub New(connectionString As String)
  overload: Catalyst.Core.Lib.Repository.EfCoreContext.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Catalyst.Core.Lib.Repository.EfCoreContext.PeerIdDaoStore
  commentId: P:Catalyst.Core.Lib.Repository.EfCoreContext.PeerIdDaoStore
  id: PeerIdDaoStore
  parent: Catalyst.Core.Lib.Repository.EfCoreContext
  langs:
  - csharp
  - vb
  name: PeerIdDaoStore
  nameWithType: EfCoreContext.PeerIdDaoStore
  fullName: Catalyst.Core.Lib.Repository.EfCoreContext.PeerIdDaoStore
  type: Property
  source:
    remote:
      path: src/Catalyst.Core.Lib/Repository/EfCoreContext.cs
      branch: gh-pages
      repo: https://github.com/catalyst-network/Catalyst.Framework.git
    id: PeerIdDaoStore
    path: ../src/Catalyst.Core.Lib/Repository/EfCoreContext.cs
    startLine: 41
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.Repository
  syntax:
    content: public EntityFrameworkCore.DbSet<PeerIdDao> PeerIdDaoStore { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Catalyst.Core.Lib.DAO.PeerIdDao}
    content.vb: Public Property PeerIdDaoStore As EntityFrameworkCore.DbSet(Of PeerIdDao)
  overload: Catalyst.Core.Lib.Repository.EfCoreContext.PeerIdDaoStore*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Catalyst.Core.Lib.Repository.EfCoreContext.PeerDaoStore
  commentId: P:Catalyst.Core.Lib.Repository.EfCoreContext.PeerDaoStore
  id: PeerDaoStore
  parent: Catalyst.Core.Lib.Repository.EfCoreContext
  langs:
  - csharp
  - vb
  name: PeerDaoStore
  nameWithType: EfCoreContext.PeerDaoStore
  fullName: Catalyst.Core.Lib.Repository.EfCoreContext.PeerDaoStore
  type: Property
  source:
    remote:
      path: src/Catalyst.Core.Lib/Repository/EfCoreContext.cs
      branch: gh-pages
      repo: https://github.com/catalyst-network/Catalyst.Framework.git
    id: PeerDaoStore
    path: ../src/Catalyst.Core.Lib/Repository/EfCoreContext.cs
    startLine: 42
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.Repository
  syntax:
    content: public EntityFrameworkCore.DbSet<PeerDao> PeerDaoStore { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Catalyst.Core.Lib.DAO.PeerDao}
    content.vb: Public Property PeerDaoStore As EntityFrameworkCore.DbSet(Of PeerDao)
  overload: Catalyst.Core.Lib.Repository.EfCoreContext.PeerDaoStore*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Catalyst.Core.Lib.Repository.EfCoreContext.TransactionBroadcastStore
  commentId: P:Catalyst.Core.Lib.Repository.EfCoreContext.TransactionBroadcastStore
  id: TransactionBroadcastStore
  parent: Catalyst.Core.Lib.Repository.EfCoreContext
  langs:
  - csharp
  - vb
  name: TransactionBroadcastStore
  nameWithType: EfCoreContext.TransactionBroadcastStore
  fullName: Catalyst.Core.Lib.Repository.EfCoreContext.TransactionBroadcastStore
  type: Property
  source:
    remote:
      path: src/Catalyst.Core.Lib/Repository/EfCoreContext.cs
      branch: gh-pages
      repo: https://github.com/catalyst-network/Catalyst.Framework.git
    id: TransactionBroadcastStore
    path: ../src/Catalyst.Core.Lib/Repository/EfCoreContext.cs
    startLine: 43
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.Repository
  syntax:
    content: public EntityFrameworkCore.DbSet<TransactionBroadcastDao> TransactionBroadcastStore { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Catalyst.Core.Lib.DAO.TransactionBroadcastDao}
    content.vb: Public Property TransactionBroadcastStore As EntityFrameworkCore.DbSet(Of TransactionBroadcastDao)
  overload: Catalyst.Core.Lib.Repository.EfCoreContext.TransactionBroadcastStore*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Catalyst.Core.Lib.Repository.EfCoreContext.PublicEntryDaoStore
  commentId: P:Catalyst.Core.Lib.Repository.EfCoreContext.PublicEntryDaoStore
  id: PublicEntryDaoStore
  parent: Catalyst.Core.Lib.Repository.EfCoreContext
  langs:
  - csharp
  - vb
  name: PublicEntryDaoStore
  nameWithType: EfCoreContext.PublicEntryDaoStore
  fullName: Catalyst.Core.Lib.Repository.EfCoreContext.PublicEntryDaoStore
  type: Property
  source:
    remote:
      path: src/Catalyst.Core.Lib/Repository/EfCoreContext.cs
      branch: gh-pages
      repo: https://github.com/catalyst-network/Catalyst.Framework.git
    id: PublicEntryDaoStore
    path: ../src/Catalyst.Core.Lib/Repository/EfCoreContext.cs
    startLine: 44
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.Repository
  syntax:
    content: public EntityFrameworkCore.DbSet<PublicEntryDao> PublicEntryDaoStore { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Catalyst.Core.Lib.DAO.PublicEntryDao}
    content.vb: Public Property PublicEntryDaoStore As EntityFrameworkCore.DbSet(Of PublicEntryDao)
  overload: Catalyst.Core.Lib.Repository.EfCoreContext.PublicEntryDaoStore*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Catalyst.Core.Lib.Repository.EfCoreContext.ConfidentialEntryDaoStore
  commentId: P:Catalyst.Core.Lib.Repository.EfCoreContext.ConfidentialEntryDaoStore
  id: ConfidentialEntryDaoStore
  parent: Catalyst.Core.Lib.Repository.EfCoreContext
  langs:
  - csharp
  - vb
  name: ConfidentialEntryDaoStore
  nameWithType: EfCoreContext.ConfidentialEntryDaoStore
  fullName: Catalyst.Core.Lib.Repository.EfCoreContext.ConfidentialEntryDaoStore
  type: Property
  source:
    remote:
      path: src/Catalyst.Core.Lib/Repository/EfCoreContext.cs
      branch: gh-pages
      repo: https://github.com/catalyst-network/Catalyst.Framework.git
    id: ConfidentialEntryDaoStore
    path: ../src/Catalyst.Core.Lib/Repository/EfCoreContext.cs
    startLine: 45
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.Repository
  syntax:
    content: public EntityFrameworkCore.DbSet<ConfidentialEntryDao> ConfidentialEntryDaoStore { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Catalyst.Core.Lib.DAO.ConfidentialEntryDao}
    content.vb: Public Property ConfidentialEntryDaoStore As EntityFrameworkCore.DbSet(Of ConfidentialEntryDao)
  overload: Catalyst.Core.Lib.Repository.EfCoreContext.ConfidentialEntryDaoStore*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Catalyst.Core.Lib.Repository.EfCoreContext.ContractEntryDaoStore
  commentId: P:Catalyst.Core.Lib.Repository.EfCoreContext.ContractEntryDaoStore
  id: ContractEntryDaoStore
  parent: Catalyst.Core.Lib.Repository.EfCoreContext
  langs:
  - csharp
  - vb
  name: ContractEntryDaoStore
  nameWithType: EfCoreContext.ContractEntryDaoStore
  fullName: Catalyst.Core.Lib.Repository.EfCoreContext.ContractEntryDaoStore
  type: Property
  source:
    remote:
      path: src/Catalyst.Core.Lib/Repository/EfCoreContext.cs
      branch: gh-pages
      repo: https://github.com/catalyst-network/Catalyst.Framework.git
    id: ContractEntryDaoStore
    path: ../src/Catalyst.Core.Lib/Repository/EfCoreContext.cs
    startLine: 46
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.Repository
  syntax:
    content: public EntityFrameworkCore.DbSet<ContractEntryDao> ContractEntryDaoStore { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Catalyst.Core.Lib.DAO.ContractEntryDao}
    content.vb: Public Property ContractEntryDaoStore As EntityFrameworkCore.DbSet(Of ContractEntryDao)
  overload: Catalyst.Core.Lib.Repository.EfCoreContext.ContractEntryDaoStore*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Catalyst.Core.Lib.Repository.EfCoreContext.BaseEntryDaoStore
  commentId: P:Catalyst.Core.Lib.Repository.EfCoreContext.BaseEntryDaoStore
  id: BaseEntryDaoStore
  parent: Catalyst.Core.Lib.Repository.EfCoreContext
  langs:
  - csharp
  - vb
  name: BaseEntryDaoStore
  nameWithType: EfCoreContext.BaseEntryDaoStore
  fullName: Catalyst.Core.Lib.Repository.EfCoreContext.BaseEntryDaoStore
  type: Property
  source:
    remote:
      path: src/Catalyst.Core.Lib/Repository/EfCoreContext.cs
      branch: gh-pages
      repo: https://github.com/catalyst-network/Catalyst.Framework.git
    id: BaseEntryDaoStore
    path: ../src/Catalyst.Core.Lib/Repository/EfCoreContext.cs
    startLine: 47
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.Repository
  syntax:
    content: public EntityFrameworkCore.DbSet<BaseEntryDao> BaseEntryDaoStore { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Catalyst.Core.Lib.DAO.BaseEntryDao}
    content.vb: Public Property BaseEntryDaoStore As EntityFrameworkCore.DbSet(Of BaseEntryDao)
  overload: Catalyst.Core.Lib.Repository.EfCoreContext.BaseEntryDaoStore*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Catalyst.Core.Lib.Repository.EfCoreContext.SignatureDaoStore
  commentId: P:Catalyst.Core.Lib.Repository.EfCoreContext.SignatureDaoStore
  id: SignatureDaoStore
  parent: Catalyst.Core.Lib.Repository.EfCoreContext
  langs:
  - csharp
  - vb
  name: SignatureDaoStore
  nameWithType: EfCoreContext.SignatureDaoStore
  fullName: Catalyst.Core.Lib.Repository.EfCoreContext.SignatureDaoStore
  type: Property
  source:
    remote:
      path: src/Catalyst.Core.Lib/Repository/EfCoreContext.cs
      branch: gh-pages
      repo: https://github.com/catalyst-network/Catalyst.Framework.git
    id: SignatureDaoStore
    path: ../src/Catalyst.Core.Lib/Repository/EfCoreContext.cs
    startLine: 48
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.Repository
  syntax:
    content: public EntityFrameworkCore.DbSet<SignatureDao> SignatureDaoStore { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Catalyst.Core.Lib.DAO.SignatureDao}
    content.vb: Public Property SignatureDaoStore As EntityFrameworkCore.DbSet(Of SignatureDao)
  overload: Catalyst.Core.Lib.Repository.EfCoreContext.SignatureDaoStore*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Catalyst.Core.Lib.Repository.EfCoreContext.SigningContextDaoStore
  commentId: P:Catalyst.Core.Lib.Repository.EfCoreContext.SigningContextDaoStore
  id: SigningContextDaoStore
  parent: Catalyst.Core.Lib.Repository.EfCoreContext
  langs:
  - csharp
  - vb
  name: SigningContextDaoStore
  nameWithType: EfCoreContext.SigningContextDaoStore
  fullName: Catalyst.Core.Lib.Repository.EfCoreContext.SigningContextDaoStore
  type: Property
  source:
    remote:
      path: src/Catalyst.Core.Lib/Repository/EfCoreContext.cs
      branch: gh-pages
      repo: https://github.com/catalyst-network/Catalyst.Framework.git
    id: SigningContextDaoStore
    path: ../src/Catalyst.Core.Lib/Repository/EfCoreContext.cs
    startLine: 49
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.Repository
  syntax:
    content: public EntityFrameworkCore.DbSet<SigningContextDao> SigningContextDaoStore { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Catalyst.Core.Lib.DAO.SigningContextDao}
    content.vb: Public Property SigningContextDaoStore As EntityFrameworkCore.DbSet(Of SigningContextDao)
  overload: Catalyst.Core.Lib.Repository.EfCoreContext.SigningContextDaoStore*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Catalyst.Core.Lib.Repository.EfCoreContext.OnModelCreating(ModelBuilder)
  commentId: M:Catalyst.Core.Lib.Repository.EfCoreContext.OnModelCreating(ModelBuilder)
  id: OnModelCreating(ModelBuilder)
  parent: Catalyst.Core.Lib.Repository.EfCoreContext
  langs:
  - csharp
  - vb
  name: OnModelCreating(ModelBuilder)
  nameWithType: EfCoreContext.OnModelCreating(ModelBuilder)
  fullName: Catalyst.Core.Lib.Repository.EfCoreContext.OnModelCreating(ModelBuilder)
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Lib/Repository/EfCoreContext.cs
      branch: gh-pages
      repo: https://github.com/catalyst-network/Catalyst.Framework.git
    id: OnModelCreating
    path: ../src/Catalyst.Core.Lib/Repository/EfCoreContext.cs
    startLine: 51
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.Repository
  syntax:
    content: protected override void OnModelCreating(ModelBuilder modelBuilder)
    parameters:
    - id: modelBuilder
      type: ModelBuilder
    content.vb: Protected Overrides Sub OnModelCreating(modelBuilder As ModelBuilder)
  overload: Catalyst.Core.Lib.Repository.EfCoreContext.OnModelCreating*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: Catalyst.Core.Lib.Repository
  commentId: N:Catalyst.Core.Lib.Repository
  name: Catalyst.Core.Lib.Repository
  nameWithType: Catalyst.Core.Lib.Repository
  fullName: Catalyst.Core.Lib.Repository
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Catalyst.Core.Lib.Repository.IDbContext
  commentId: T:Catalyst.Core.Lib.Repository.IDbContext
  parent: Catalyst.Core.Lib.Repository
  name: IDbContext
  nameWithType: IDbContext
  fullName: Catalyst.Core.Lib.Repository.IDbContext
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Catalyst.Core.Lib.Repository.EfCoreContext.#ctor*
  commentId: Overload:Catalyst.Core.Lib.Repository.EfCoreContext.#ctor
  name: EfCoreContext
  nameWithType: EfCoreContext.EfCoreContext
  fullName: Catalyst.Core.Lib.Repository.EfCoreContext.EfCoreContext
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Catalyst.Core.Lib.Repository.EfCoreContext.PeerIdDaoStore*
  commentId: Overload:Catalyst.Core.Lib.Repository.EfCoreContext.PeerIdDaoStore
  name: PeerIdDaoStore
  nameWithType: EfCoreContext.PeerIdDaoStore
  fullName: Catalyst.Core.Lib.Repository.EfCoreContext.PeerIdDaoStore
- uid: Microsoft.EntityFrameworkCore.DbSet{Catalyst.Core.Lib.DAO.PeerIdDao}
  commentId: '!:Microsoft.EntityFrameworkCore.DbSet{Catalyst.Core.Lib.DAO.PeerIdDao}'
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: EntityFrameworkCore.DbSet<PeerIdDao>
  nameWithType: EntityFrameworkCore.DbSet<PeerIdDao>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Catalyst.Core.Lib.DAO.PeerIdDao>
  nameWithType.vb: EntityFrameworkCore.DbSet(Of PeerIdDao)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Catalyst.Core.Lib.DAO.PeerIdDao)
  name.vb: EntityFrameworkCore.DbSet(Of PeerIdDao)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: EntityFrameworkCore.DbSet
    nameWithType: EntityFrameworkCore.DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Catalyst.Core.Lib.DAO.PeerIdDao
    name: PeerIdDao
    nameWithType: PeerIdDao
    fullName: Catalyst.Core.Lib.DAO.PeerIdDao
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: EntityFrameworkCore.DbSet
    nameWithType: EntityFrameworkCore.DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Catalyst.Core.Lib.DAO.PeerIdDao
    name: PeerIdDao
    nameWithType: PeerIdDao
    fullName: Catalyst.Core.Lib.DAO.PeerIdDao
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbSet`1
  isExternal: true
  name: EntityFrameworkCore.DbSet<>
  nameWithType: EntityFrameworkCore.DbSet<>
  fullName: Microsoft.EntityFrameworkCore.DbSet<>
  nameWithType.vb: EntityFrameworkCore.DbSet(Of )
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of )
  name.vb: EntityFrameworkCore.DbSet(Of )
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: EntityFrameworkCore.DbSet
    nameWithType: EntityFrameworkCore.DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: EntityFrameworkCore.DbSet
    nameWithType: EntityFrameworkCore.DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Lib.Repository.EfCoreContext.PeerDaoStore*
  commentId: Overload:Catalyst.Core.Lib.Repository.EfCoreContext.PeerDaoStore
  name: PeerDaoStore
  nameWithType: EfCoreContext.PeerDaoStore
  fullName: Catalyst.Core.Lib.Repository.EfCoreContext.PeerDaoStore
- uid: Microsoft.EntityFrameworkCore.DbSet{Catalyst.Core.Lib.DAO.PeerDao}
  commentId: '!:Microsoft.EntityFrameworkCore.DbSet{Catalyst.Core.Lib.DAO.PeerDao}'
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: EntityFrameworkCore.DbSet<PeerDao>
  nameWithType: EntityFrameworkCore.DbSet<PeerDao>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Catalyst.Core.Lib.DAO.PeerDao>
  nameWithType.vb: EntityFrameworkCore.DbSet(Of PeerDao)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Catalyst.Core.Lib.DAO.PeerDao)
  name.vb: EntityFrameworkCore.DbSet(Of PeerDao)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: EntityFrameworkCore.DbSet
    nameWithType: EntityFrameworkCore.DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Catalyst.Core.Lib.DAO.PeerDao
    name: PeerDao
    nameWithType: PeerDao
    fullName: Catalyst.Core.Lib.DAO.PeerDao
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: EntityFrameworkCore.DbSet
    nameWithType: EntityFrameworkCore.DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Catalyst.Core.Lib.DAO.PeerDao
    name: PeerDao
    nameWithType: PeerDao
    fullName: Catalyst.Core.Lib.DAO.PeerDao
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Lib.Repository.EfCoreContext.TransactionBroadcastStore*
  commentId: Overload:Catalyst.Core.Lib.Repository.EfCoreContext.TransactionBroadcastStore
  name: TransactionBroadcastStore
  nameWithType: EfCoreContext.TransactionBroadcastStore
  fullName: Catalyst.Core.Lib.Repository.EfCoreContext.TransactionBroadcastStore
- uid: Microsoft.EntityFrameworkCore.DbSet{Catalyst.Core.Lib.DAO.TransactionBroadcastDao}
  commentId: '!:Microsoft.EntityFrameworkCore.DbSet{Catalyst.Core.Lib.DAO.TransactionBroadcastDao}'
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: EntityFrameworkCore.DbSet<TransactionBroadcastDao>
  nameWithType: EntityFrameworkCore.DbSet<TransactionBroadcastDao>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Catalyst.Core.Lib.DAO.TransactionBroadcastDao>
  nameWithType.vb: EntityFrameworkCore.DbSet(Of TransactionBroadcastDao)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Catalyst.Core.Lib.DAO.TransactionBroadcastDao)
  name.vb: EntityFrameworkCore.DbSet(Of TransactionBroadcastDao)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: EntityFrameworkCore.DbSet
    nameWithType: EntityFrameworkCore.DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Catalyst.Core.Lib.DAO.TransactionBroadcastDao
    name: TransactionBroadcastDao
    nameWithType: TransactionBroadcastDao
    fullName: Catalyst.Core.Lib.DAO.TransactionBroadcastDao
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: EntityFrameworkCore.DbSet
    nameWithType: EntityFrameworkCore.DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Catalyst.Core.Lib.DAO.TransactionBroadcastDao
    name: TransactionBroadcastDao
    nameWithType: TransactionBroadcastDao
    fullName: Catalyst.Core.Lib.DAO.TransactionBroadcastDao
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Lib.Repository.EfCoreContext.PublicEntryDaoStore*
  commentId: Overload:Catalyst.Core.Lib.Repository.EfCoreContext.PublicEntryDaoStore
  name: PublicEntryDaoStore
  nameWithType: EfCoreContext.PublicEntryDaoStore
  fullName: Catalyst.Core.Lib.Repository.EfCoreContext.PublicEntryDaoStore
- uid: Microsoft.EntityFrameworkCore.DbSet{Catalyst.Core.Lib.DAO.PublicEntryDao}
  commentId: '!:Microsoft.EntityFrameworkCore.DbSet{Catalyst.Core.Lib.DAO.PublicEntryDao}'
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: EntityFrameworkCore.DbSet<PublicEntryDao>
  nameWithType: EntityFrameworkCore.DbSet<PublicEntryDao>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Catalyst.Core.Lib.DAO.PublicEntryDao>
  nameWithType.vb: EntityFrameworkCore.DbSet(Of PublicEntryDao)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Catalyst.Core.Lib.DAO.PublicEntryDao)
  name.vb: EntityFrameworkCore.DbSet(Of PublicEntryDao)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: EntityFrameworkCore.DbSet
    nameWithType: EntityFrameworkCore.DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Catalyst.Core.Lib.DAO.PublicEntryDao
    name: PublicEntryDao
    nameWithType: PublicEntryDao
    fullName: Catalyst.Core.Lib.DAO.PublicEntryDao
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: EntityFrameworkCore.DbSet
    nameWithType: EntityFrameworkCore.DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Catalyst.Core.Lib.DAO.PublicEntryDao
    name: PublicEntryDao
    nameWithType: PublicEntryDao
    fullName: Catalyst.Core.Lib.DAO.PublicEntryDao
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Lib.Repository.EfCoreContext.ConfidentialEntryDaoStore*
  commentId: Overload:Catalyst.Core.Lib.Repository.EfCoreContext.ConfidentialEntryDaoStore
  name: ConfidentialEntryDaoStore
  nameWithType: EfCoreContext.ConfidentialEntryDaoStore
  fullName: Catalyst.Core.Lib.Repository.EfCoreContext.ConfidentialEntryDaoStore
- uid: Microsoft.EntityFrameworkCore.DbSet{Catalyst.Core.Lib.DAO.ConfidentialEntryDao}
  commentId: '!:Microsoft.EntityFrameworkCore.DbSet{Catalyst.Core.Lib.DAO.ConfidentialEntryDao}'
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: EntityFrameworkCore.DbSet<ConfidentialEntryDao>
  nameWithType: EntityFrameworkCore.DbSet<ConfidentialEntryDao>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Catalyst.Core.Lib.DAO.ConfidentialEntryDao>
  nameWithType.vb: EntityFrameworkCore.DbSet(Of ConfidentialEntryDao)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Catalyst.Core.Lib.DAO.ConfidentialEntryDao)
  name.vb: EntityFrameworkCore.DbSet(Of ConfidentialEntryDao)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: EntityFrameworkCore.DbSet
    nameWithType: EntityFrameworkCore.DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Catalyst.Core.Lib.DAO.ConfidentialEntryDao
    name: ConfidentialEntryDao
    nameWithType: ConfidentialEntryDao
    fullName: Catalyst.Core.Lib.DAO.ConfidentialEntryDao
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: EntityFrameworkCore.DbSet
    nameWithType: EntityFrameworkCore.DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Catalyst.Core.Lib.DAO.ConfidentialEntryDao
    name: ConfidentialEntryDao
    nameWithType: ConfidentialEntryDao
    fullName: Catalyst.Core.Lib.DAO.ConfidentialEntryDao
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Lib.Repository.EfCoreContext.ContractEntryDaoStore*
  commentId: Overload:Catalyst.Core.Lib.Repository.EfCoreContext.ContractEntryDaoStore
  name: ContractEntryDaoStore
  nameWithType: EfCoreContext.ContractEntryDaoStore
  fullName: Catalyst.Core.Lib.Repository.EfCoreContext.ContractEntryDaoStore
- uid: Microsoft.EntityFrameworkCore.DbSet{Catalyst.Core.Lib.DAO.ContractEntryDao}
  commentId: '!:Microsoft.EntityFrameworkCore.DbSet{Catalyst.Core.Lib.DAO.ContractEntryDao}'
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: EntityFrameworkCore.DbSet<ContractEntryDao>
  nameWithType: EntityFrameworkCore.DbSet<ContractEntryDao>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Catalyst.Core.Lib.DAO.ContractEntryDao>
  nameWithType.vb: EntityFrameworkCore.DbSet(Of ContractEntryDao)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Catalyst.Core.Lib.DAO.ContractEntryDao)
  name.vb: EntityFrameworkCore.DbSet(Of ContractEntryDao)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: EntityFrameworkCore.DbSet
    nameWithType: EntityFrameworkCore.DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Catalyst.Core.Lib.DAO.ContractEntryDao
    name: ContractEntryDao
    nameWithType: ContractEntryDao
    fullName: Catalyst.Core.Lib.DAO.ContractEntryDao
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: EntityFrameworkCore.DbSet
    nameWithType: EntityFrameworkCore.DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Catalyst.Core.Lib.DAO.ContractEntryDao
    name: ContractEntryDao
    nameWithType: ContractEntryDao
    fullName: Catalyst.Core.Lib.DAO.ContractEntryDao
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Lib.Repository.EfCoreContext.BaseEntryDaoStore*
  commentId: Overload:Catalyst.Core.Lib.Repository.EfCoreContext.BaseEntryDaoStore
  name: BaseEntryDaoStore
  nameWithType: EfCoreContext.BaseEntryDaoStore
  fullName: Catalyst.Core.Lib.Repository.EfCoreContext.BaseEntryDaoStore
- uid: Microsoft.EntityFrameworkCore.DbSet{Catalyst.Core.Lib.DAO.BaseEntryDao}
  commentId: '!:Microsoft.EntityFrameworkCore.DbSet{Catalyst.Core.Lib.DAO.BaseEntryDao}'
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: EntityFrameworkCore.DbSet<BaseEntryDao>
  nameWithType: EntityFrameworkCore.DbSet<BaseEntryDao>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Catalyst.Core.Lib.DAO.BaseEntryDao>
  nameWithType.vb: EntityFrameworkCore.DbSet(Of BaseEntryDao)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Catalyst.Core.Lib.DAO.BaseEntryDao)
  name.vb: EntityFrameworkCore.DbSet(Of BaseEntryDao)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: EntityFrameworkCore.DbSet
    nameWithType: EntityFrameworkCore.DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Catalyst.Core.Lib.DAO.BaseEntryDao
    name: BaseEntryDao
    nameWithType: BaseEntryDao
    fullName: Catalyst.Core.Lib.DAO.BaseEntryDao
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: EntityFrameworkCore.DbSet
    nameWithType: EntityFrameworkCore.DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Catalyst.Core.Lib.DAO.BaseEntryDao
    name: BaseEntryDao
    nameWithType: BaseEntryDao
    fullName: Catalyst.Core.Lib.DAO.BaseEntryDao
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Lib.Repository.EfCoreContext.SignatureDaoStore*
  commentId: Overload:Catalyst.Core.Lib.Repository.EfCoreContext.SignatureDaoStore
  name: SignatureDaoStore
  nameWithType: EfCoreContext.SignatureDaoStore
  fullName: Catalyst.Core.Lib.Repository.EfCoreContext.SignatureDaoStore
- uid: Microsoft.EntityFrameworkCore.DbSet{Catalyst.Core.Lib.DAO.SignatureDao}
  commentId: '!:Microsoft.EntityFrameworkCore.DbSet{Catalyst.Core.Lib.DAO.SignatureDao}'
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: EntityFrameworkCore.DbSet<SignatureDao>
  nameWithType: EntityFrameworkCore.DbSet<SignatureDao>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Catalyst.Core.Lib.DAO.SignatureDao>
  nameWithType.vb: EntityFrameworkCore.DbSet(Of SignatureDao)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Catalyst.Core.Lib.DAO.SignatureDao)
  name.vb: EntityFrameworkCore.DbSet(Of SignatureDao)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: EntityFrameworkCore.DbSet
    nameWithType: EntityFrameworkCore.DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Catalyst.Core.Lib.DAO.SignatureDao
    name: SignatureDao
    nameWithType: SignatureDao
    fullName: Catalyst.Core.Lib.DAO.SignatureDao
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: EntityFrameworkCore.DbSet
    nameWithType: EntityFrameworkCore.DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Catalyst.Core.Lib.DAO.SignatureDao
    name: SignatureDao
    nameWithType: SignatureDao
    fullName: Catalyst.Core.Lib.DAO.SignatureDao
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Lib.Repository.EfCoreContext.SigningContextDaoStore*
  commentId: Overload:Catalyst.Core.Lib.Repository.EfCoreContext.SigningContextDaoStore
  name: SigningContextDaoStore
  nameWithType: EfCoreContext.SigningContextDaoStore
  fullName: Catalyst.Core.Lib.Repository.EfCoreContext.SigningContextDaoStore
- uid: Microsoft.EntityFrameworkCore.DbSet{Catalyst.Core.Lib.DAO.SigningContextDao}
  commentId: '!:Microsoft.EntityFrameworkCore.DbSet{Catalyst.Core.Lib.DAO.SigningContextDao}'
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: EntityFrameworkCore.DbSet<SigningContextDao>
  nameWithType: EntityFrameworkCore.DbSet<SigningContextDao>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Catalyst.Core.Lib.DAO.SigningContextDao>
  nameWithType.vb: EntityFrameworkCore.DbSet(Of SigningContextDao)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Catalyst.Core.Lib.DAO.SigningContextDao)
  name.vb: EntityFrameworkCore.DbSet(Of SigningContextDao)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: EntityFrameworkCore.DbSet
    nameWithType: EntityFrameworkCore.DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Catalyst.Core.Lib.DAO.SigningContextDao
    name: SigningContextDao
    nameWithType: SigningContextDao
    fullName: Catalyst.Core.Lib.DAO.SigningContextDao
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: EntityFrameworkCore.DbSet
    nameWithType: EntityFrameworkCore.DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Catalyst.Core.Lib.DAO.SigningContextDao
    name: SigningContextDao
    nameWithType: SigningContextDao
    fullName: Catalyst.Core.Lib.DAO.SigningContextDao
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Lib.Repository.EfCoreContext.OnModelCreating*
  commentId: Overload:Catalyst.Core.Lib.Repository.EfCoreContext.OnModelCreating
  name: OnModelCreating
  nameWithType: EfCoreContext.OnModelCreating
  fullName: Catalyst.Core.Lib.Repository.EfCoreContext.OnModelCreating
- uid: ModelBuilder
  commentId: '!:ModelBuilder'
  isExternal: true
  name: ModelBuilder
  nameWithType: ModelBuilder
  fullName: ModelBuilder
