### YamlMime:ManagedReference
items:
- uid: Catalyst.Core.Lib.IO.Transport.Channels.ClientChannelInitializerBase`1
  commentId: T:Catalyst.Core.Lib.IO.Transport.Channels.ClientChannelInitializerBase`1
  id: ClientChannelInitializerBase`1
  parent: Catalyst.Core.Lib.IO.Transport.Channels
  children:
  - Catalyst.Core.Lib.IO.Transport.Channels.ClientChannelInitializerBase`1.#ctor(System.Func{System.Collections.Generic.IList{IChannelHandler}},Catalyst.Abstractions.IO.EventLoop.IEventLoopGroupFactory,System.Net.IPAddress,System.Security.Cryptography.X509Certificates.X509Certificate)
  - Catalyst.Core.Lib.IO.Transport.Channels.ClientChannelInitializerBase`1.NewTlsHandler(System.Net.IPAddress,System.Security.Cryptography.X509Certificates.X509Certificate)
  - Catalyst.Core.Lib.IO.Transport.Channels.ClientChannelInitializerBase`1.ToString
  langs:
  - csharp
  - vb
  name: ClientChannelInitializerBase<T>
  nameWithType: ClientChannelInitializerBase<T>
  fullName: Catalyst.Core.Lib.IO.Transport.Channels.ClientChannelInitializerBase<T>
  type: Class
  source:
    remote:
      path: src/Catalyst.Core.Lib/IO/Transport/Channels/ClientChannelInitializerBase.cs
      branch: gh-pages
      repo: https://github.com/catalyst-network/Catalyst.Framework.git
    id: ClientChannelInitializerBase
    path: ../src/Catalyst.Core.Lib/IO/Transport/Channels/ClientChannelInitializerBase.cs
    startLine: 35
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.IO.Transport.Channels
  syntax:
    content: 'public sealed class ClientChannelInitializerBase<T> : ChannelInitializerBase<T> where T : IChannel'
    typeParameters:
    - id: T
    content.vb: >-
      Public NotInheritable Class ClientChannelInitializerBase(Of T As IChannel)

          Inherits ChannelInitializerBase(Of T)
  inheritance:
  - System.Object
  - Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase{{T}}
  inheritedMembers:
  - Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase{{T}}.InitChannel({T})
  nameWithType.vb: ClientChannelInitializerBase(Of T)
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
  fullName.vb: Catalyst.Core.Lib.IO.Transport.Channels.ClientChannelInitializerBase(Of T)
  name.vb: ClientChannelInitializerBase(Of T)
- uid: Catalyst.Core.Lib.IO.Transport.Channels.ClientChannelInitializerBase`1.#ctor(System.Func{System.Collections.Generic.IList{IChannelHandler}},Catalyst.Abstractions.IO.EventLoop.IEventLoopGroupFactory,System.Net.IPAddress,System.Security.Cryptography.X509Certificates.X509Certificate)
  commentId: M:Catalyst.Core.Lib.IO.Transport.Channels.ClientChannelInitializerBase`1.#ctor(System.Func{System.Collections.Generic.IList{IChannelHandler}},Catalyst.Abstractions.IO.EventLoop.IEventLoopGroupFactory,System.Net.IPAddress,System.Security.Cryptography.X509Certificates.X509Certificate)
  id: '#ctor(System.Func{System.Collections.Generic.IList{IChannelHandler}},Catalyst.Abstractions.IO.EventLoop.IEventLoopGroupFactory,System.Net.IPAddress,System.Security.Cryptography.X509Certificates.X509Certificate)'
  parent: Catalyst.Core.Lib.IO.Transport.Channels.ClientChannelInitializerBase`1
  langs:
  - csharp
  - vb
  name: ClientChannelInitializerBase(Func<IList<IChannelHandler>>, IEventLoopGroupFactory, IPAddress, X509Certificate)
  nameWithType: ClientChannelInitializerBase<T>.ClientChannelInitializerBase(Func<IList<IChannelHandler>>, IEventLoopGroupFactory, IPAddress, X509Certificate)
  fullName: Catalyst.Core.Lib.IO.Transport.Channels.ClientChannelInitializerBase<T>.ClientChannelInitializerBase(System.Func<System.Collections.Generic.IList<IChannelHandler>>, Catalyst.Abstractions.IO.EventLoop.IEventLoopGroupFactory, System.Net.IPAddress, System.Security.Cryptography.X509Certificates.X509Certificate)
  type: Constructor
  source:
    remote:
      path: src/Catalyst.Core.Lib/IO/Transport/Channels/ClientChannelInitializerBase.cs
      branch: gh-pages
      repo: https://github.com/catalyst-network/Catalyst.Framework.git
    id: .ctor
    path: ../src/Catalyst.Core.Lib/IO/Transport/Channels/ClientChannelInitializerBase.cs
    startLine: 38
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.IO.Transport.Channels
  example: []
  syntax:
    content: public ClientChannelInitializerBase(Func<IList<IChannelHandler>> handlerGenerationFunction, IEventLoopGroupFactory eventLoopGroupFactory, IPAddress targetHost = null, X509Certificate certificate = null)
    parameters:
    - id: handlerGenerationFunction
      type: System.Func{System.Collections.Generic.IList{IChannelHandler}}
    - id: eventLoopGroupFactory
      type: Catalyst.Abstractions.IO.EventLoop.IEventLoopGroupFactory
    - id: targetHost
      type: System.Net.IPAddress
    - id: certificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
    content.vb: Public Sub New(handlerGenerationFunction As Func(Of IList(Of IChannelHandler)), eventLoopGroupFactory As IEventLoopGroupFactory, targetHost As IPAddress = Nothing, certificate As X509Certificate = Nothing)
  overload: Catalyst.Core.Lib.IO.Transport.Channels.ClientChannelInitializerBase`1.#ctor*
  nameWithType.vb: ClientChannelInitializerBase(Of T).ClientChannelInitializerBase(Func(Of IList(Of IChannelHandler)), IEventLoopGroupFactory, IPAddress, X509Certificate)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Catalyst.Core.Lib.IO.Transport.Channels.ClientChannelInitializerBase(Of T).ClientChannelInitializerBase(System.Func(Of System.Collections.Generic.IList(Of IChannelHandler)), Catalyst.Abstractions.IO.EventLoop.IEventLoopGroupFactory, System.Net.IPAddress, System.Security.Cryptography.X509Certificates.X509Certificate)
  name.vb: ClientChannelInitializerBase(Func(Of IList(Of IChannelHandler)), IEventLoopGroupFactory, IPAddress, X509Certificate)
- uid: Catalyst.Core.Lib.IO.Transport.Channels.ClientChannelInitializerBase`1.NewTlsHandler(System.Net.IPAddress,System.Security.Cryptography.X509Certificates.X509Certificate)
  commentId: M:Catalyst.Core.Lib.IO.Transport.Channels.ClientChannelInitializerBase`1.NewTlsHandler(System.Net.IPAddress,System.Security.Cryptography.X509Certificates.X509Certificate)
  id: NewTlsHandler(System.Net.IPAddress,System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: Catalyst.Core.Lib.IO.Transport.Channels.ClientChannelInitializerBase`1
  langs:
  - csharp
  - vb
  name: NewTlsHandler(IPAddress, X509Certificate)
  nameWithType: ClientChannelInitializerBase<T>.NewTlsHandler(IPAddress, X509Certificate)
  fullName: Catalyst.Core.Lib.IO.Transport.Channels.ClientChannelInitializerBase<T>.NewTlsHandler(System.Net.IPAddress, System.Security.Cryptography.X509Certificates.X509Certificate)
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Lib/IO/Transport/Channels/ClientChannelInitializerBase.cs
      branch: gh-pages
      repo: https://github.com/catalyst-network/Catalyst.Framework.git
    id: NewTlsHandler
    path: ../src/Catalyst.Core.Lib/IO/Transport/Channels/ClientChannelInitializerBase.cs
    startLine: 48
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.IO.Transport.Channels
  syntax:
    content: public override TlsHandler NewTlsHandler(IPAddress targetHost, X509Certificate certificate)
    parameters:
    - id: targetHost
      type: System.Net.IPAddress
    - id: certificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
    return:
      type: TlsHandler
    content.vb: Public Overrides Function NewTlsHandler(targetHost As IPAddress, certificate As X509Certificate) As TlsHandler
  overridden: Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase{{T}}.NewTlsHandler(System.Net.IPAddress,System.Security.Cryptography.X509Certificates.X509Certificate)
  overload: Catalyst.Core.Lib.IO.Transport.Channels.ClientChannelInitializerBase`1.NewTlsHandler*
  nameWithType.vb: ClientChannelInitializerBase(Of T).NewTlsHandler(IPAddress, X509Certificate)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Catalyst.Core.Lib.IO.Transport.Channels.ClientChannelInitializerBase(Of T).NewTlsHandler(System.Net.IPAddress, System.Security.Cryptography.X509Certificates.X509Certificate)
- uid: Catalyst.Core.Lib.IO.Transport.Channels.ClientChannelInitializerBase`1.ToString
  commentId: M:Catalyst.Core.Lib.IO.Transport.Channels.ClientChannelInitializerBase`1.ToString
  id: ToString
  parent: Catalyst.Core.Lib.IO.Transport.Channels.ClientChannelInitializerBase`1
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ClientChannelInitializerBase<T>.ToString()
  fullName: Catalyst.Core.Lib.IO.Transport.Channels.ClientChannelInitializerBase<T>.ToString()
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Lib/IO/Transport/Channels/ClientChannelInitializerBase.cs
      branch: gh-pages
      repo: https://github.com/catalyst-network/Catalyst.Framework.git
    id: ToString
    path: ../src/Catalyst.Core.Lib/IO/Transport/Channels/ClientChannelInitializerBase.cs
    startLine: 57
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.IO.Transport.Channels
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overload: Catalyst.Core.Lib.IO.Transport.Channels.ClientChannelInitializerBase`1.ToString*
  nameWithType.vb: ClientChannelInitializerBase(Of T).ToString()
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Catalyst.Core.Lib.IO.Transport.Channels.ClientChannelInitializerBase(Of T).ToString()
references:
- uid: Catalyst.Core.Lib.IO.Transport.Channels
  commentId: N:Catalyst.Core.Lib.IO.Transport.Channels
  name: Catalyst.Core.Lib.IO.Transport.Channels
  nameWithType: Catalyst.Core.Lib.IO.Transport.Channels
  fullName: Catalyst.Core.Lib.IO.Transport.Channels
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase{{T}}
  commentId: T:Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase{`0}
  parent: Catalyst.Core.Lib.IO.Transport.Channels
  definition: Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase`1
  name: ChannelInitializerBase<T>
  nameWithType: ChannelInitializerBase<T>
  fullName: Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase<T>
  nameWithType.vb: ChannelInitializerBase(Of T)
  fullName.vb: Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase(Of T)
  name.vb: ChannelInitializerBase(Of T)
  spec.csharp:
  - uid: Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase`1
    name: ChannelInitializerBase
    nameWithType: ChannelInitializerBase
    fullName: Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase`1
    name: ChannelInitializerBase
    nameWithType: ChannelInitializerBase
    fullName: Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase{{T}}.InitChannel({T})
  commentId: M:Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase{`0}.InitChannel(`0)
  parent: Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase{{T}}
  definition: Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase`1.InitChannel(`0)
  name: InitChannel(T)
  nameWithType: ChannelInitializerBase<T>.InitChannel(T)
  fullName: Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase<T>.InitChannel(T)
  nameWithType.vb: ChannelInitializerBase(Of T).InitChannel(T)
  fullName.vb: Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase(Of T).InitChannel(T)
  spec.csharp:
  - uid: Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase`1.InitChannel(`0)
    name: InitChannel
    nameWithType: ChannelInitializerBase<T>.InitChannel
    fullName: Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase<T>.InitChannel
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase`1.InitChannel(`0)
    name: InitChannel
    nameWithType: ChannelInitializerBase(Of T).InitChannel
    fullName: Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase(Of T).InitChannel
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase`1
  commentId: T:Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase`1
  name: ChannelInitializerBase<T>
  nameWithType: ChannelInitializerBase<T>
  fullName: Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase<T>
  nameWithType.vb: ChannelInitializerBase(Of T)
  fullName.vb: Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase(Of T)
  name.vb: ChannelInitializerBase(Of T)
  spec.csharp:
  - uid: Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase`1
    name: ChannelInitializerBase
    nameWithType: ChannelInitializerBase
    fullName: Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase`1
    name: ChannelInitializerBase
    nameWithType: ChannelInitializerBase
    fullName: Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase`1.InitChannel(`0)
  commentId: M:Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase`1.InitChannel(`0)
  name: InitChannel(T)
  nameWithType: ChannelInitializerBase<T>.InitChannel(T)
  fullName: Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase<T>.InitChannel(T)
  nameWithType.vb: ChannelInitializerBase(Of T).InitChannel(T)
  fullName.vb: Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase(Of T).InitChannel(T)
  spec.csharp:
  - uid: Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase`1.InitChannel(`0)
    name: InitChannel
    nameWithType: ChannelInitializerBase<T>.InitChannel
    fullName: Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase<T>.InitChannel
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase`1.InitChannel(`0)
    name: InitChannel
    nameWithType: ChannelInitializerBase(Of T).InitChannel
    fullName: Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase(Of T).InitChannel
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Lib.IO.Transport.Channels.ClientChannelInitializerBase`1.#ctor*
  commentId: Overload:Catalyst.Core.Lib.IO.Transport.Channels.ClientChannelInitializerBase`1.#ctor
  name: ClientChannelInitializerBase
  nameWithType: ClientChannelInitializerBase<T>.ClientChannelInitializerBase
  fullName: Catalyst.Core.Lib.IO.Transport.Channels.ClientChannelInitializerBase<T>.ClientChannelInitializerBase
  nameWithType.vb: ClientChannelInitializerBase(Of T).ClientChannelInitializerBase
  fullName.vb: Catalyst.Core.Lib.IO.Transport.Channels.ClientChannelInitializerBase(Of T).ClientChannelInitializerBase
- uid: System.Func{System.Collections.Generic.IList{IChannelHandler}}
  commentId: T:System.Func{System.Collections.Generic.IList{IChannelHandler}}
  parent: System
  definition: System.Func`1
  name: Func<IList<IChannelHandler>>
  nameWithType: Func<IList<IChannelHandler>>
  fullName: System.Func<System.Collections.Generic.IList<IChannelHandler>>
  nameWithType.vb: Func(Of IList(Of IChannelHandler))
  fullName.vb: System.Func(Of System.Collections.Generic.IList(Of IChannelHandler))
  name.vb: Func(Of IList(Of IChannelHandler))
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: IChannelHandler
    name: IChannelHandler
    nameWithType: IChannelHandler
    fullName: IChannelHandler
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: IChannelHandler
    name: IChannelHandler
    nameWithType: IChannelHandler
    fullName: IChannelHandler
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Abstractions.IO.EventLoop.IEventLoopGroupFactory
  commentId: T:Catalyst.Abstractions.IO.EventLoop.IEventLoopGroupFactory
  parent: Catalyst.Abstractions.IO.EventLoop
  name: IEventLoopGroupFactory
  nameWithType: IEventLoopGroupFactory
  fullName: Catalyst.Abstractions.IO.EventLoop.IEventLoopGroupFactory
- uid: System.Net.IPAddress
  commentId: T:System.Net.IPAddress
  parent: System.Net
  isExternal: true
  name: IPAddress
  nameWithType: IPAddress
  fullName: System.Net.IPAddress
- uid: System.Security.Cryptography.X509Certificates.X509Certificate
  commentId: T:System.Security.Cryptography.X509Certificates.X509Certificate
  parent: System.Security.Cryptography.X509Certificates
  isExternal: true
  name: X509Certificate
  nameWithType: X509Certificate
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullName.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Abstractions.IO.EventLoop
  commentId: N:Catalyst.Abstractions.IO.EventLoop
  name: Catalyst.Abstractions.IO.EventLoop
  nameWithType: Catalyst.Abstractions.IO.EventLoop
  fullName: Catalyst.Abstractions.IO.EventLoop
- uid: System.Net
  commentId: N:System.Net
  isExternal: true
  name: System.Net
  nameWithType: System.Net
  fullName: System.Net
- uid: System.Security.Cryptography.X509Certificates
  commentId: N:System.Security.Cryptography.X509Certificates
  isExternal: true
  name: System.Security.Cryptography.X509Certificates
  nameWithType: System.Security.Cryptography.X509Certificates
  fullName: System.Security.Cryptography.X509Certificates
- uid: Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase{{T}}.NewTlsHandler(System.Net.IPAddress,System.Security.Cryptography.X509Certificates.X509Certificate)
  commentId: M:Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase{`0}.NewTlsHandler(System.Net.IPAddress,System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase{{T}}
  definition: Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase`1.NewTlsHandler(System.Net.IPAddress,System.Security.Cryptography.X509Certificates.X509Certificate)
  name: NewTlsHandler(IPAddress, X509Certificate)
  nameWithType: ChannelInitializerBase<T>.NewTlsHandler(IPAddress, X509Certificate)
  fullName: Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase<T>.NewTlsHandler(System.Net.IPAddress, System.Security.Cryptography.X509Certificates.X509Certificate)
  nameWithType.vb: ChannelInitializerBase(Of T).NewTlsHandler(IPAddress, X509Certificate)
  fullName.vb: Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase(Of T).NewTlsHandler(System.Net.IPAddress, System.Security.Cryptography.X509Certificates.X509Certificate)
  spec.csharp:
  - uid: Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase`1.NewTlsHandler(System.Net.IPAddress,System.Security.Cryptography.X509Certificates.X509Certificate)
    name: NewTlsHandler
    nameWithType: ChannelInitializerBase<T>.NewTlsHandler
    fullName: Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase<T>.NewTlsHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.IPAddress
    name: IPAddress
    nameWithType: IPAddress
    fullName: System.Net.IPAddress
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate
    name: X509Certificate
    nameWithType: X509Certificate
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase`1.NewTlsHandler(System.Net.IPAddress,System.Security.Cryptography.X509Certificates.X509Certificate)
    name: NewTlsHandler
    nameWithType: ChannelInitializerBase(Of T).NewTlsHandler
    fullName: Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase(Of T).NewTlsHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.IPAddress
    name: IPAddress
    nameWithType: IPAddress
    fullName: System.Net.IPAddress
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate
    name: X509Certificate
    nameWithType: X509Certificate
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Lib.IO.Transport.Channels.ClientChannelInitializerBase`1.NewTlsHandler*
  commentId: Overload:Catalyst.Core.Lib.IO.Transport.Channels.ClientChannelInitializerBase`1.NewTlsHandler
  name: NewTlsHandler
  nameWithType: ClientChannelInitializerBase<T>.NewTlsHandler
  fullName: Catalyst.Core.Lib.IO.Transport.Channels.ClientChannelInitializerBase<T>.NewTlsHandler
  nameWithType.vb: ClientChannelInitializerBase(Of T).NewTlsHandler
  fullName.vb: Catalyst.Core.Lib.IO.Transport.Channels.ClientChannelInitializerBase(Of T).NewTlsHandler
- uid: TlsHandler
  isExternal: true
  name: TlsHandler
  nameWithType: TlsHandler
  fullName: TlsHandler
- uid: Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase`1.NewTlsHandler(System.Net.IPAddress,System.Security.Cryptography.X509Certificates.X509Certificate)
  commentId: M:Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase`1.NewTlsHandler(System.Net.IPAddress,System.Security.Cryptography.X509Certificates.X509Certificate)
  isExternal: true
  name: NewTlsHandler(IPAddress, X509Certificate)
  nameWithType: ChannelInitializerBase<T>.NewTlsHandler(IPAddress, X509Certificate)
  fullName: Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase<T>.NewTlsHandler(System.Net.IPAddress, System.Security.Cryptography.X509Certificates.X509Certificate)
  nameWithType.vb: ChannelInitializerBase(Of T).NewTlsHandler(IPAddress, X509Certificate)
  fullName.vb: Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase(Of T).NewTlsHandler(System.Net.IPAddress, System.Security.Cryptography.X509Certificates.X509Certificate)
  spec.csharp:
  - uid: Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase`1.NewTlsHandler(System.Net.IPAddress,System.Security.Cryptography.X509Certificates.X509Certificate)
    name: NewTlsHandler
    nameWithType: ChannelInitializerBase<T>.NewTlsHandler
    fullName: Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase<T>.NewTlsHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.IPAddress
    name: IPAddress
    nameWithType: IPAddress
    fullName: System.Net.IPAddress
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate
    name: X509Certificate
    nameWithType: X509Certificate
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase`1.NewTlsHandler(System.Net.IPAddress,System.Security.Cryptography.X509Certificates.X509Certificate)
    name: NewTlsHandler
    nameWithType: ChannelInitializerBase(Of T).NewTlsHandler
    fullName: Catalyst.Core.Lib.IO.Transport.Channels.ChannelInitializerBase(Of T).NewTlsHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.IPAddress
    name: IPAddress
    nameWithType: IPAddress
    fullName: System.Net.IPAddress
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate
    name: X509Certificate
    nameWithType: X509Certificate
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Lib.IO.Transport.Channels.ClientChannelInitializerBase`1.ToString*
  commentId: Overload:Catalyst.Core.Lib.IO.Transport.Channels.ClientChannelInitializerBase`1.ToString
  name: ToString
  nameWithType: ClientChannelInitializerBase<T>.ToString
  fullName: Catalyst.Core.Lib.IO.Transport.Channels.ClientChannelInitializerBase<T>.ToString
  nameWithType.vb: ClientChannelInitializerBase(Of T).ToString
  fullName.vb: Catalyst.Core.Lib.IO.Transport.Channels.ClientChannelInitializerBase(Of T).ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
