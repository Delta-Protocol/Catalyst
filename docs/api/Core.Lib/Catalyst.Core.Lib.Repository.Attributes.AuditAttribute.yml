### YamlMime:ManagedReference
items:
- uid: Catalyst.Core.Lib.Repository.Attributes.AuditAttribute
  commentId: T:Catalyst.Core.Lib.Repository.Attributes.AuditAttribute
  id: AuditAttribute
  parent: Catalyst.Core.Lib.Repository.Attributes
  children:
  - Catalyst.Core.Lib.Repository.Attributes.AuditAttribute.OnAddExecuting``2(``0,RepositoryActionContext{``0,``1})
  - Catalyst.Core.Lib.Repository.Attributes.AuditAttribute.OnUpdateExecuting``2(``0,RepositoryActionContext{``0,``1})
  langs:
  - csharp
  - vb
  name: AuditAttribute
  nameWithType: AuditAttribute
  fullName: Catalyst.Core.Lib.Repository.Attributes.AuditAttribute
  type: Class
  source:
    remote:
      path: src/Catalyst.Core.Lib/Repository/Attributes/AuditableAttribute.cs
      branch: gh-pages
      repo: https://github.com/catalyst-network/Catalyst.Framework.git
    id: AuditAttribute
    path: ../src/Catalyst.Core.Lib/Repository/Attributes/AuditableAttribute.cs
    startLine: 29
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.Repository.Attributes
  syntax:
    content: 'public sealed class AuditAttribute : RepositoryActionBaseAttribute'
    content.vb: >-
      Public NotInheritable Class AuditAttribute

          Inherits RepositoryActionBaseAttribute
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Catalyst.Core.Lib.Repository.Attributes.AuditAttribute.OnAddExecuting``2(``0,RepositoryActionContext{``0,``1})
  commentId: M:Catalyst.Core.Lib.Repository.Attributes.AuditAttribute.OnAddExecuting``2(``0,RepositoryActionContext{``0,``1})
  id: OnAddExecuting``2(``0,RepositoryActionContext{``0,``1})
  parent: Catalyst.Core.Lib.Repository.Attributes.AuditAttribute
  langs:
  - csharp
  - vb
  name: OnAddExecuting<T, TKey>(T, RepositoryActionContext<T, TKey>)
  nameWithType: AuditAttribute.OnAddExecuting<T, TKey>(T, RepositoryActionContext<T, TKey>)
  fullName: Catalyst.Core.Lib.Repository.Attributes.AuditAttribute.OnAddExecuting<T, TKey>(T, RepositoryActionContext<T, TKey>)
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Lib/Repository/Attributes/AuditableAttribute.cs
      branch: gh-pages
      repo: https://github.com/catalyst-network/Catalyst.Framework.git
    id: OnAddExecuting
    path: ../src/Catalyst.Core.Lib/Repository/Attributes/AuditableAttribute.cs
    startLine: 39
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.Repository.Attributes
  summary: "\n\n"
  example: []
  syntax:
    content: public override bool OnAddExecuting<T, TKey>(T entity, RepositoryActionContext<T, TKey> context)
    parameters:
    - id: entity
      type: '{T}'
      description: ''
    - id: context
      type: RepositoryActionContext{{T},{TKey}}
      description: ''
    typeParameters:
    - id: T
      description: ''
    - id: TKey
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Overrides Function OnAddExecuting(Of T, TKey)(entity As T, context As RepositoryActionContext(Of T, TKey)) As Boolean
  overload: Catalyst.Core.Lib.Repository.Attributes.AuditAttribute.OnAddExecuting*
  nameWithType.vb: AuditAttribute.OnAddExecuting(Of T, TKey)(T, RepositoryActionContext(Of T, TKey))
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Catalyst.Core.Lib.Repository.Attributes.AuditAttribute.OnAddExecuting(Of T, TKey)(T, RepositoryActionContext(Of T, TKey))
  name.vb: OnAddExecuting(Of T, TKey)(T, RepositoryActionContext(Of T, TKey))
- uid: Catalyst.Core.Lib.Repository.Attributes.AuditAttribute.OnUpdateExecuting``2(``0,RepositoryActionContext{``0,``1})
  commentId: M:Catalyst.Core.Lib.Repository.Attributes.AuditAttribute.OnUpdateExecuting``2(``0,RepositoryActionContext{``0,``1})
  id: OnUpdateExecuting``2(``0,RepositoryActionContext{``0,``1})
  parent: Catalyst.Core.Lib.Repository.Attributes.AuditAttribute
  langs:
  - csharp
  - vb
  name: OnUpdateExecuting<T, TKey>(T, RepositoryActionContext<T, TKey>)
  nameWithType: AuditAttribute.OnUpdateExecuting<T, TKey>(T, RepositoryActionContext<T, TKey>)
  fullName: Catalyst.Core.Lib.Repository.Attributes.AuditAttribute.OnUpdateExecuting<T, TKey>(T, RepositoryActionContext<T, TKey>)
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Lib/Repository/Attributes/AuditableAttribute.cs
      branch: gh-pages
      repo: https://github.com/catalyst-network/Catalyst.Framework.git
    id: OnUpdateExecuting
    path: ../src/Catalyst.Core.Lib/Repository/Attributes/AuditableAttribute.cs
    startLine: 57
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.Repository.Attributes
  summary: "\n\n"
  example: []
  syntax:
    content: public override bool OnUpdateExecuting<T, TKey>(T entity, RepositoryActionContext<T, TKey> context)
    parameters:
    - id: entity
      type: '{T}'
      description: ''
    - id: context
      type: RepositoryActionContext{{T},{TKey}}
      description: ''
    typeParameters:
    - id: T
      description: ''
    - id: TKey
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Overrides Function OnUpdateExecuting(Of T, TKey)(entity As T, context As RepositoryActionContext(Of T, TKey)) As Boolean
  overload: Catalyst.Core.Lib.Repository.Attributes.AuditAttribute.OnUpdateExecuting*
  nameWithType.vb: AuditAttribute.OnUpdateExecuting(Of T, TKey)(T, RepositoryActionContext(Of T, TKey))
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Catalyst.Core.Lib.Repository.Attributes.AuditAttribute.OnUpdateExecuting(Of T, TKey)(T, RepositoryActionContext(Of T, TKey))
  name.vb: OnUpdateExecuting(Of T, TKey)(T, RepositoryActionContext(Of T, TKey))
references:
- uid: Catalyst.Core.Lib.Repository.Attributes
  commentId: N:Catalyst.Core.Lib.Repository.Attributes
  name: Catalyst.Core.Lib.Repository.Attributes
  nameWithType: Catalyst.Core.Lib.Repository.Attributes
  fullName: Catalyst.Core.Lib.Repository.Attributes
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Catalyst.Core.Lib.Repository.Attributes.AuditAttribute.OnAddExecuting*
  commentId: Overload:Catalyst.Core.Lib.Repository.Attributes.AuditAttribute.OnAddExecuting
  name: OnAddExecuting
  nameWithType: AuditAttribute.OnAddExecuting
  fullName: Catalyst.Core.Lib.Repository.Attributes.AuditAttribute.OnAddExecuting
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: RepositoryActionContext{{T},{TKey}}
  commentId: '!:RepositoryActionContext{``0,``1}'
  definition: RepositoryActionContext`2
  name: RepositoryActionContext<T, TKey>
  nameWithType: RepositoryActionContext<T, TKey>
  fullName: RepositoryActionContext<T, TKey>
  nameWithType.vb: RepositoryActionContext(Of T, TKey)
  fullName.vb: RepositoryActionContext(Of T, TKey)
  name.vb: RepositoryActionContext(Of T, TKey)
  spec.csharp:
  - uid: RepositoryActionContext`2
    name: RepositoryActionContext
    nameWithType: RepositoryActionContext
    fullName: RepositoryActionContext
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: RepositoryActionContext`2
    name: RepositoryActionContext
    nameWithType: RepositoryActionContext
    fullName: RepositoryActionContext
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: RepositoryActionContext`2
  isExternal: true
  name: RepositoryActionContext<, >
  nameWithType: RepositoryActionContext<, >
  fullName: RepositoryActionContext<, >
  nameWithType.vb: RepositoryActionContext(Of , )
  fullName.vb: RepositoryActionContext(Of , )
  name.vb: RepositoryActionContext(Of , )
  spec.csharp:
  - uid: RepositoryActionContext`2
    name: RepositoryActionContext
    nameWithType: RepositoryActionContext
    fullName: RepositoryActionContext
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: RepositoryActionContext`2
    name: RepositoryActionContext
    nameWithType: RepositoryActionContext
    fullName: RepositoryActionContext
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Lib.Repository.Attributes.AuditAttribute.OnUpdateExecuting*
  commentId: Overload:Catalyst.Core.Lib.Repository.Attributes.AuditAttribute.OnUpdateExecuting
  name: OnUpdateExecuting
  nameWithType: AuditAttribute.OnUpdateExecuting
  fullName: Catalyst.Core.Lib.Repository.Attributes.AuditAttribute.OnUpdateExecuting
