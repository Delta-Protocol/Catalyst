### YamlMime:ManagedReference
items:
- uid: Catalyst.Core.Lib.Extensions.Protocol.Wire.TransactionBroadcastExtensions
  commentId: T:Catalyst.Core.Lib.Extensions.Protocol.Wire.TransactionBroadcastExtensions
  id: TransactionBroadcastExtensions
  parent: Catalyst.Core.Lib.Extensions.Protocol.Wire
  children:
  - Catalyst.Core.Lib.Extensions.Protocol.Wire.TransactionBroadcastExtensions.Sign(TransactionBroadcast,Catalyst.Abstractions.Cryptography.ICryptoContext,Catalyst.Abstractions.Cryptography.IPrivateKey,SigningContext)
  - Catalyst.Core.Lib.Extensions.Protocol.Wire.TransactionBroadcastExtensions.SummedEntryFees(TransactionBroadcast)
  langs:
  - csharp
  - vb
  name: TransactionBroadcastExtensions
  nameWithType: TransactionBroadcastExtensions
  fullName: Catalyst.Core.Lib.Extensions.Protocol.Wire.TransactionBroadcastExtensions
  type: Class
  source:
    remote:
      path: src/Catalyst.Core.Lib/Extensions/Protocol/Wire/TransactionBroadcastExtensions.cs
      branch: gh-pages
      repo: https://github.com/catalyst-network/Catalyst.Framework.git
    id: TransactionBroadcastExtensions
    path: ../src/Catalyst.Core.Lib/Extensions/Protocol/Wire/TransactionBroadcastExtensions.cs
    startLine: 33
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.Extensions.Protocol.Wire
  syntax:
    content: public static class TransactionBroadcastExtensions
    content.vb: Public Module TransactionBroadcastExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Catalyst.Core.Lib.Extensions.Protocol.Wire.TransactionBroadcastExtensions.SummedEntryFees(TransactionBroadcast)
  commentId: M:Catalyst.Core.Lib.Extensions.Protocol.Wire.TransactionBroadcastExtensions.SummedEntryFees(TransactionBroadcast)
  id: SummedEntryFees(TransactionBroadcast)
  isExtensionMethod: true
  parent: Catalyst.Core.Lib.Extensions.Protocol.Wire.TransactionBroadcastExtensions
  langs:
  - csharp
  - vb
  name: SummedEntryFees(TransactionBroadcast)
  nameWithType: TransactionBroadcastExtensions.SummedEntryFees(TransactionBroadcast)
  fullName: Catalyst.Core.Lib.Extensions.Protocol.Wire.TransactionBroadcastExtensions.SummedEntryFees(TransactionBroadcast)
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Lib/Extensions/Protocol/Wire/TransactionBroadcastExtensions.cs
      branch: gh-pages
      repo: https://github.com/catalyst-network/Catalyst.Framework.git
    id: SummedEntryFees
    path: ../src/Catalyst.Core.Lib/Extensions/Protocol/Wire/TransactionBroadcastExtensions.cs
    startLine: 37
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.Extensions.Protocol.Wire
  syntax:
    content: public static UInt256 SummedEntryFees(this TransactionBroadcast transaction)
    parameters:
    - id: transaction
      type: TransactionBroadcast
    return:
      type: UInt256
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SummedEntryFees(transaction As TransactionBroadcast) As UInt256
  overload: Catalyst.Core.Lib.Extensions.Protocol.Wire.TransactionBroadcastExtensions.SummedEntryFees*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Catalyst.Core.Lib.Extensions.Protocol.Wire.TransactionBroadcastExtensions.Sign(TransactionBroadcast,Catalyst.Abstractions.Cryptography.ICryptoContext,Catalyst.Abstractions.Cryptography.IPrivateKey,SigningContext)
  commentId: M:Catalyst.Core.Lib.Extensions.Protocol.Wire.TransactionBroadcastExtensions.Sign(TransactionBroadcast,Catalyst.Abstractions.Cryptography.ICryptoContext,Catalyst.Abstractions.Cryptography.IPrivateKey,SigningContext)
  id: Sign(TransactionBroadcast,Catalyst.Abstractions.Cryptography.ICryptoContext,Catalyst.Abstractions.Cryptography.IPrivateKey,SigningContext)
  isExtensionMethod: true
  parent: Catalyst.Core.Lib.Extensions.Protocol.Wire.TransactionBroadcastExtensions
  langs:
  - csharp
  - vb
  name: Sign(TransactionBroadcast, ICryptoContext, IPrivateKey, SigningContext)
  nameWithType: TransactionBroadcastExtensions.Sign(TransactionBroadcast, ICryptoContext, IPrivateKey, SigningContext)
  fullName: Catalyst.Core.Lib.Extensions.Protocol.Wire.TransactionBroadcastExtensions.Sign(TransactionBroadcast, Catalyst.Abstractions.Cryptography.ICryptoContext, Catalyst.Abstractions.Cryptography.IPrivateKey, SigningContext)
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Lib/Extensions/Protocol/Wire/TransactionBroadcastExtensions.cs
      branch: gh-pages
      repo: https://github.com/catalyst-network/Catalyst.Framework.git
    id: Sign
    path: ../src/Catalyst.Core.Lib/Extensions/Protocol/Wire/TransactionBroadcastExtensions.cs
    startLine: 45
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.Extensions.Protocol.Wire
  syntax:
    content: public static TransactionBroadcast Sign(this TransactionBroadcast transaction, ICryptoContext cryptoContext, IPrivateKey privateKey, SigningContext context)
    parameters:
    - id: transaction
      type: TransactionBroadcast
    - id: cryptoContext
      type: Catalyst.Abstractions.Cryptography.ICryptoContext
    - id: privateKey
      type: Catalyst.Abstractions.Cryptography.IPrivateKey
    - id: context
      type: SigningContext
    return:
      type: TransactionBroadcast
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Sign(transaction As TransactionBroadcast, cryptoContext As ICryptoContext, privateKey As IPrivateKey, context As SigningContext) As TransactionBroadcast
  overload: Catalyst.Core.Lib.Extensions.Protocol.Wire.TransactionBroadcastExtensions.Sign*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Catalyst.Core.Lib.Extensions.Protocol.Wire
  commentId: N:Catalyst.Core.Lib.Extensions.Protocol.Wire
  name: Catalyst.Core.Lib.Extensions.Protocol.Wire
  nameWithType: Catalyst.Core.Lib.Extensions.Protocol.Wire
  fullName: Catalyst.Core.Lib.Extensions.Protocol.Wire
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Catalyst.Core.Lib.Extensions.Protocol.Wire.TransactionBroadcastExtensions.SummedEntryFees*
  commentId: Overload:Catalyst.Core.Lib.Extensions.Protocol.Wire.TransactionBroadcastExtensions.SummedEntryFees
  name: SummedEntryFees
  nameWithType: TransactionBroadcastExtensions.SummedEntryFees
  fullName: Catalyst.Core.Lib.Extensions.Protocol.Wire.TransactionBroadcastExtensions.SummedEntryFees
- uid: TransactionBroadcast
  isExternal: true
  name: TransactionBroadcast
  nameWithType: TransactionBroadcast
  fullName: TransactionBroadcast
- uid: UInt256
  isExternal: true
  name: UInt256
  nameWithType: UInt256
  fullName: UInt256
- uid: Catalyst.Core.Lib.Extensions.Protocol.Wire.TransactionBroadcastExtensions.Sign*
  commentId: Overload:Catalyst.Core.Lib.Extensions.Protocol.Wire.TransactionBroadcastExtensions.Sign
  name: Sign
  nameWithType: TransactionBroadcastExtensions.Sign
  fullName: Catalyst.Core.Lib.Extensions.Protocol.Wire.TransactionBroadcastExtensions.Sign
- uid: Catalyst.Abstractions.Cryptography.ICryptoContext
  commentId: T:Catalyst.Abstractions.Cryptography.ICryptoContext
  parent: Catalyst.Abstractions.Cryptography
  name: ICryptoContext
  nameWithType: ICryptoContext
  fullName: Catalyst.Abstractions.Cryptography.ICryptoContext
- uid: Catalyst.Abstractions.Cryptography.IPrivateKey
  commentId: T:Catalyst.Abstractions.Cryptography.IPrivateKey
  parent: Catalyst.Abstractions.Cryptography
  name: IPrivateKey
  nameWithType: IPrivateKey
  fullName: Catalyst.Abstractions.Cryptography.IPrivateKey
- uid: SigningContext
  isExternal: true
  name: SigningContext
  nameWithType: SigningContext
  fullName: SigningContext
- uid: Catalyst.Abstractions.Cryptography
  commentId: N:Catalyst.Abstractions.Cryptography
  name: Catalyst.Abstractions.Cryptography
  nameWithType: Catalyst.Abstractions.Cryptography
  fullName: Catalyst.Abstractions.Cryptography
