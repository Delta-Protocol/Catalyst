### YamlMime:ManagedReference
items:
- uid: Catalyst.Core.Lib.IO.Handlers.FlushPipelineHandler`1
  commentId: T:Catalyst.Core.Lib.IO.Handlers.FlushPipelineHandler`1
  id: FlushPipelineHandler`1
  parent: Catalyst.Core.Lib.IO.Handlers
  children:
  - Catalyst.Core.Lib.IO.Handlers.FlushPipelineHandler`1.WriteAsync0(IChannelHandlerContext,`0)
  langs:
  - csharp
  - vb
  name: FlushPipelineHandler<T>
  nameWithType: FlushPipelineHandler<T>
  fullName: Catalyst.Core.Lib.IO.Handlers.FlushPipelineHandler<T>
  type: Class
  source:
    remote:
      path: src/Catalyst.Core.Lib/IO/Handlers/FlushPipelineHandler.cs
      branch: gh-pages
      repo: https://github.com/catalyst-network/Catalyst.Framework.git
    id: FlushPipelineHandler
    path: ../src/Catalyst.Core.Lib/IO/Handlers/FlushPipelineHandler.cs
    startLine: 30
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.IO.Handlers
  syntax:
    content: 'public sealed class FlushPipelineHandler<T> : OutboundChannelHandlerBase<T>'
    typeParameters:
    - id: T
    content.vb: >-
      Public NotInheritable Class FlushPipelineHandler(Of T)

          Inherits OutboundChannelHandlerBase(Of T)
  inheritance:
  - System.Object
  - Catalyst.Core.Lib.IO.Handlers.OutboundChannelHandlerBase{{T}}
  inheritedMembers:
  - Catalyst.Core.Lib.IO.Handlers.OutboundChannelHandlerBase{{T}}.WriteAsync(IChannelHandlerContext,System.Object)
  nameWithType.vb: FlushPipelineHandler(Of T)
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
  fullName.vb: Catalyst.Core.Lib.IO.Handlers.FlushPipelineHandler(Of T)
  name.vb: FlushPipelineHandler(Of T)
- uid: Catalyst.Core.Lib.IO.Handlers.FlushPipelineHandler`1.WriteAsync0(IChannelHandlerContext,`0)
  commentId: M:Catalyst.Core.Lib.IO.Handlers.FlushPipelineHandler`1.WriteAsync0(IChannelHandlerContext,`0)
  id: WriteAsync0(IChannelHandlerContext,`0)
  parent: Catalyst.Core.Lib.IO.Handlers.FlushPipelineHandler`1
  langs:
  - csharp
  - vb
  name: WriteAsync0(IChannelHandlerContext, T)
  nameWithType: FlushPipelineHandler<T>.WriteAsync0(IChannelHandlerContext, T)
  fullName: Catalyst.Core.Lib.IO.Handlers.FlushPipelineHandler<T>.WriteAsync0(IChannelHandlerContext, T)
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Lib/IO/Handlers/FlushPipelineHandler.cs
      branch: gh-pages
      repo: https://github.com/catalyst-network/Catalyst.Framework.git
    id: WriteAsync0
    path: ../src/Catalyst.Core.Lib/IO/Handlers/FlushPipelineHandler.cs
    startLine: 35
  assemblies:
  - Catalyst.Core.Lib
  namespace: Catalyst.Core.Lib.IO.Handlers
  syntax:
    content: protected override Task WriteAsync0(IChannelHandlerContext ctx, T msg)
    parameters:
    - id: ctx
      type: IChannelHandlerContext
    - id: msg
      type: '{T}'
    return:
      type: System.Threading.Tasks.Task
    content.vb: Protected Overrides Function WriteAsync0(ctx As IChannelHandlerContext, msg As T) As Task
  overridden: Catalyst.Core.Lib.IO.Handlers.OutboundChannelHandlerBase{{T}}.WriteAsync0(IChannelHandlerContext,{T})
  overload: Catalyst.Core.Lib.IO.Handlers.FlushPipelineHandler`1.WriteAsync0*
  nameWithType.vb: FlushPipelineHandler(Of T).WriteAsync0(IChannelHandlerContext, T)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: Catalyst.Core.Lib.IO.Handlers.FlushPipelineHandler(Of T).WriteAsync0(IChannelHandlerContext, T)
references:
- uid: Catalyst.Core.Lib.IO.Handlers
  commentId: N:Catalyst.Core.Lib.IO.Handlers
  name: Catalyst.Core.Lib.IO.Handlers
  nameWithType: Catalyst.Core.Lib.IO.Handlers
  fullName: Catalyst.Core.Lib.IO.Handlers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Catalyst.Core.Lib.IO.Handlers.OutboundChannelHandlerBase{{T}}
  commentId: T:Catalyst.Core.Lib.IO.Handlers.OutboundChannelHandlerBase{`0}
  parent: Catalyst.Core.Lib.IO.Handlers
  definition: Catalyst.Core.Lib.IO.Handlers.OutboundChannelHandlerBase`1
  name: OutboundChannelHandlerBase<T>
  nameWithType: OutboundChannelHandlerBase<T>
  fullName: Catalyst.Core.Lib.IO.Handlers.OutboundChannelHandlerBase<T>
  nameWithType.vb: OutboundChannelHandlerBase(Of T)
  fullName.vb: Catalyst.Core.Lib.IO.Handlers.OutboundChannelHandlerBase(Of T)
  name.vb: OutboundChannelHandlerBase(Of T)
  spec.csharp:
  - uid: Catalyst.Core.Lib.IO.Handlers.OutboundChannelHandlerBase`1
    name: OutboundChannelHandlerBase
    nameWithType: OutboundChannelHandlerBase
    fullName: Catalyst.Core.Lib.IO.Handlers.OutboundChannelHandlerBase
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Catalyst.Core.Lib.IO.Handlers.OutboundChannelHandlerBase`1
    name: OutboundChannelHandlerBase
    nameWithType: OutboundChannelHandlerBase
    fullName: Catalyst.Core.Lib.IO.Handlers.OutboundChannelHandlerBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Lib.IO.Handlers.OutboundChannelHandlerBase{{T}}.WriteAsync(IChannelHandlerContext,System.Object)
  commentId: M:Catalyst.Core.Lib.IO.Handlers.OutboundChannelHandlerBase{`0}.WriteAsync(IChannelHandlerContext,System.Object)
  parent: Catalyst.Core.Lib.IO.Handlers.OutboundChannelHandlerBase{{T}}
  definition: Catalyst.Core.Lib.IO.Handlers.OutboundChannelHandlerBase`1.WriteAsync(IChannelHandlerContext,System.Object)
  name: WriteAsync(IChannelHandlerContext, Object)
  nameWithType: OutboundChannelHandlerBase<T>.WriteAsync(IChannelHandlerContext, Object)
  fullName: Catalyst.Core.Lib.IO.Handlers.OutboundChannelHandlerBase<T>.WriteAsync(IChannelHandlerContext, System.Object)
  nameWithType.vb: OutboundChannelHandlerBase(Of T).WriteAsync(IChannelHandlerContext, Object)
  fullName.vb: Catalyst.Core.Lib.IO.Handlers.OutboundChannelHandlerBase(Of T).WriteAsync(IChannelHandlerContext, System.Object)
  spec.csharp:
  - uid: Catalyst.Core.Lib.IO.Handlers.OutboundChannelHandlerBase`1.WriteAsync(IChannelHandlerContext,System.Object)
    name: WriteAsync
    nameWithType: OutboundChannelHandlerBase<T>.WriteAsync
    fullName: Catalyst.Core.Lib.IO.Handlers.OutboundChannelHandlerBase<T>.WriteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: IChannelHandlerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Core.Lib.IO.Handlers.OutboundChannelHandlerBase`1.WriteAsync(IChannelHandlerContext,System.Object)
    name: WriteAsync
    nameWithType: OutboundChannelHandlerBase(Of T).WriteAsync
    fullName: Catalyst.Core.Lib.IO.Handlers.OutboundChannelHandlerBase(Of T).WriteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: IChannelHandlerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Catalyst.Core.Lib.IO.Handlers.OutboundChannelHandlerBase`1
  commentId: T:Catalyst.Core.Lib.IO.Handlers.OutboundChannelHandlerBase`1
  name: OutboundChannelHandlerBase<T>
  nameWithType: OutboundChannelHandlerBase<T>
  fullName: Catalyst.Core.Lib.IO.Handlers.OutboundChannelHandlerBase<T>
  nameWithType.vb: OutboundChannelHandlerBase(Of T)
  fullName.vb: Catalyst.Core.Lib.IO.Handlers.OutboundChannelHandlerBase(Of T)
  name.vb: OutboundChannelHandlerBase(Of T)
  spec.csharp:
  - uid: Catalyst.Core.Lib.IO.Handlers.OutboundChannelHandlerBase`1
    name: OutboundChannelHandlerBase
    nameWithType: OutboundChannelHandlerBase
    fullName: Catalyst.Core.Lib.IO.Handlers.OutboundChannelHandlerBase
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Catalyst.Core.Lib.IO.Handlers.OutboundChannelHandlerBase`1
    name: OutboundChannelHandlerBase
    nameWithType: OutboundChannelHandlerBase
    fullName: Catalyst.Core.Lib.IO.Handlers.OutboundChannelHandlerBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Lib.IO.Handlers.OutboundChannelHandlerBase`1.WriteAsync(IChannelHandlerContext,System.Object)
  commentId: M:Catalyst.Core.Lib.IO.Handlers.OutboundChannelHandlerBase`1.WriteAsync(IChannelHandlerContext,System.Object)
  isExternal: true
  name: WriteAsync(IChannelHandlerContext, Object)
  nameWithType: OutboundChannelHandlerBase<T>.WriteAsync(IChannelHandlerContext, Object)
  fullName: Catalyst.Core.Lib.IO.Handlers.OutboundChannelHandlerBase<T>.WriteAsync(IChannelHandlerContext, System.Object)
  nameWithType.vb: OutboundChannelHandlerBase(Of T).WriteAsync(IChannelHandlerContext, Object)
  fullName.vb: Catalyst.Core.Lib.IO.Handlers.OutboundChannelHandlerBase(Of T).WriteAsync(IChannelHandlerContext, System.Object)
  spec.csharp:
  - uid: Catalyst.Core.Lib.IO.Handlers.OutboundChannelHandlerBase`1.WriteAsync(IChannelHandlerContext,System.Object)
    name: WriteAsync
    nameWithType: OutboundChannelHandlerBase<T>.WriteAsync
    fullName: Catalyst.Core.Lib.IO.Handlers.OutboundChannelHandlerBase<T>.WriteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: IChannelHandlerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Core.Lib.IO.Handlers.OutboundChannelHandlerBase`1.WriteAsync(IChannelHandlerContext,System.Object)
    name: WriteAsync
    nameWithType: OutboundChannelHandlerBase(Of T).WriteAsync
    fullName: Catalyst.Core.Lib.IO.Handlers.OutboundChannelHandlerBase(Of T).WriteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: IChannelHandlerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Lib.IO.Handlers.OutboundChannelHandlerBase{{T}}.WriteAsync0(IChannelHandlerContext,{T})
  commentId: M:Catalyst.Core.Lib.IO.Handlers.OutboundChannelHandlerBase{`0}.WriteAsync0(IChannelHandlerContext,`0)
  parent: Catalyst.Core.Lib.IO.Handlers.OutboundChannelHandlerBase{{T}}
  definition: Catalyst.Core.Lib.IO.Handlers.OutboundChannelHandlerBase`1.WriteAsync0(IChannelHandlerContext,`0)
  name: WriteAsync0(IChannelHandlerContext, T)
  nameWithType: OutboundChannelHandlerBase<T>.WriteAsync0(IChannelHandlerContext, T)
  fullName: Catalyst.Core.Lib.IO.Handlers.OutboundChannelHandlerBase<T>.WriteAsync0(IChannelHandlerContext, T)
  nameWithType.vb: OutboundChannelHandlerBase(Of T).WriteAsync0(IChannelHandlerContext, T)
  fullName.vb: Catalyst.Core.Lib.IO.Handlers.OutboundChannelHandlerBase(Of T).WriteAsync0(IChannelHandlerContext, T)
  spec.csharp:
  - uid: Catalyst.Core.Lib.IO.Handlers.OutboundChannelHandlerBase`1.WriteAsync0(IChannelHandlerContext,`0)
    name: WriteAsync0
    nameWithType: OutboundChannelHandlerBase<T>.WriteAsync0
    fullName: Catalyst.Core.Lib.IO.Handlers.OutboundChannelHandlerBase<T>.WriteAsync0
  - name: (
    nameWithType: (
    fullName: (
  - uid: IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: IChannelHandlerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Core.Lib.IO.Handlers.OutboundChannelHandlerBase`1.WriteAsync0(IChannelHandlerContext,`0)
    name: WriteAsync0
    nameWithType: OutboundChannelHandlerBase(Of T).WriteAsync0
    fullName: Catalyst.Core.Lib.IO.Handlers.OutboundChannelHandlerBase(Of T).WriteAsync0
  - name: (
    nameWithType: (
    fullName: (
  - uid: IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: IChannelHandlerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Lib.IO.Handlers.FlushPipelineHandler`1.WriteAsync0*
  commentId: Overload:Catalyst.Core.Lib.IO.Handlers.FlushPipelineHandler`1.WriteAsync0
  name: WriteAsync0
  nameWithType: FlushPipelineHandler<T>.WriteAsync0
  fullName: Catalyst.Core.Lib.IO.Handlers.FlushPipelineHandler<T>.WriteAsync0
  nameWithType.vb: FlushPipelineHandler(Of T).WriteAsync0
  fullName.vb: Catalyst.Core.Lib.IO.Handlers.FlushPipelineHandler(Of T).WriteAsync0
- uid: IChannelHandlerContext
  isExternal: true
  name: IChannelHandlerContext
  nameWithType: IChannelHandlerContext
  fullName: IChannelHandlerContext
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Catalyst.Core.Lib.IO.Handlers.OutboundChannelHandlerBase`1.WriteAsync0(IChannelHandlerContext,`0)
  commentId: M:Catalyst.Core.Lib.IO.Handlers.OutboundChannelHandlerBase`1.WriteAsync0(IChannelHandlerContext,`0)
  isExternal: true
  name: WriteAsync0(IChannelHandlerContext, T)
  nameWithType: OutboundChannelHandlerBase<T>.WriteAsync0(IChannelHandlerContext, T)
  fullName: Catalyst.Core.Lib.IO.Handlers.OutboundChannelHandlerBase<T>.WriteAsync0(IChannelHandlerContext, T)
  nameWithType.vb: OutboundChannelHandlerBase(Of T).WriteAsync0(IChannelHandlerContext, T)
  fullName.vb: Catalyst.Core.Lib.IO.Handlers.OutboundChannelHandlerBase(Of T).WriteAsync0(IChannelHandlerContext, T)
  spec.csharp:
  - uid: Catalyst.Core.Lib.IO.Handlers.OutboundChannelHandlerBase`1.WriteAsync0(IChannelHandlerContext,`0)
    name: WriteAsync0
    nameWithType: OutboundChannelHandlerBase<T>.WriteAsync0
    fullName: Catalyst.Core.Lib.IO.Handlers.OutboundChannelHandlerBase<T>.WriteAsync0
  - name: (
    nameWithType: (
    fullName: (
  - uid: IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: IChannelHandlerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Catalyst.Core.Lib.IO.Handlers.OutboundChannelHandlerBase`1.WriteAsync0(IChannelHandlerContext,`0)
    name: WriteAsync0
    nameWithType: OutboundChannelHandlerBase(Of T).WriteAsync0
    fullName: Catalyst.Core.Lib.IO.Handlers.OutboundChannelHandlerBase(Of T).WriteAsync0
  - name: (
    nameWithType: (
    fullName: (
  - uid: IChannelHandlerContext
    name: IChannelHandlerContext
    nameWithType: IChannelHandlerContext
    fullName: IChannelHandlerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
