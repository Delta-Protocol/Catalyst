### YamlMime:ManagedReference
items:
- uid: Catalyst.Core.Modules.Consensus.Deltas.DeltaHub
  commentId: T:Catalyst.Core.Modules.Consensus.Deltas.DeltaHub
  id: DeltaHub
  parent: Catalyst.Core.Modules.Consensus.Deltas
  children:
  - Catalyst.Core.Modules.Consensus.Deltas.DeltaHub.#ctor(Catalyst.Abstractions.P2P.IO.Messaging.Broadcast.IBroadcastManager,Catalyst.Abstractions.P2P.IPeerSettings,Catalyst.Abstractions.Dfs.IDfs,Catalyst.Abstractions.Hashing.IHashProvider,ILogger)
  - Catalyst.Core.Modules.Consensus.Deltas.DeltaHub.BroadcastCandidate(CandidateDeltaBroadcast)
  - Catalyst.Core.Modules.Consensus.Deltas.DeltaHub.BroadcastFavouriteCandidateDelta(FavouriteDeltaBroadcast)
  - Catalyst.Core.Modules.Consensus.Deltas.DeltaHub.DfsRetryPolicy
  - Catalyst.Core.Modules.Consensus.Deltas.DeltaHub.PublishDeltaToDfsAndBroadcastAddressAsync(Delta,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: DeltaHub
  nameWithType: DeltaHub
  fullName: Catalyst.Core.Modules.Consensus.Deltas.DeltaHub
  type: Class
  source:
    remote:
      path: src/Catalyst.Core.Modules.Consensus/Deltas/DeltaHub.cs
      branch: gh-pages
      repo: https://github.com/catalyst-network/Catalyst.Framework.git
    id: DeltaHub
    path: ../src/Catalyst.Core.Modules.Consensus/Deltas/DeltaHub.cs
    startLine: 48
  assemblies:
  - Catalyst.Core.Modules.Consensus
  namespace: Catalyst.Core.Modules.Consensus.Deltas
  example: []
  syntax:
    content: 'public class DeltaHub : IDeltaHub'
    content.vb: >-
      Public Class DeltaHub

          Implements IDeltaHub
  inheritance:
  - System.Object
  implements:
  - Catalyst.Abstractions.Consensus.Deltas.IDeltaHub
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Catalyst.Core.Modules.Consensus.Deltas.DeltaHub.DfsRetryPolicy
  commentId: P:Catalyst.Core.Modules.Consensus.Deltas.DeltaHub.DfsRetryPolicy
  id: DfsRetryPolicy
  parent: Catalyst.Core.Modules.Consensus.Deltas.DeltaHub
  langs:
  - csharp
  - vb
  name: DfsRetryPolicy
  nameWithType: DeltaHub.DfsRetryPolicy
  fullName: Catalyst.Core.Modules.Consensus.Deltas.DeltaHub.DfsRetryPolicy
  type: Property
  source:
    remote:
      path: src/Catalyst.Core.Modules.Consensus/Deltas/DeltaHub.cs
      branch: gh-pages
      repo: https://github.com/catalyst-network/Catalyst.Framework.git
    id: DfsRetryPolicy
    path: ../src/Catalyst.Core.Modules.Consensus/Deltas/DeltaHub.cs
    startLine: 56
  assemblies:
  - Catalyst.Core.Modules.Consensus
  namespace: Catalyst.Core.Modules.Consensus.Deltas
  syntax:
    content: protected virtual AsyncRetryPolicy<Cid> DfsRetryPolicy { get; }
    parameters: []
    return:
      type: AsyncRetryPolicy{Cid}
    content.vb: Protected Overridable ReadOnly Property DfsRetryPolicy As AsyncRetryPolicy(Of Cid)
  overload: Catalyst.Core.Modules.Consensus.Deltas.DeltaHub.DfsRetryPolicy*
  modifiers.csharp:
  - protected
  - virtual
  - get
  modifiers.vb:
  - Protected
  - Overridable
  - ReadOnly
- uid: Catalyst.Core.Modules.Consensus.Deltas.DeltaHub.#ctor(Catalyst.Abstractions.P2P.IO.Messaging.Broadcast.IBroadcastManager,Catalyst.Abstractions.P2P.IPeerSettings,Catalyst.Abstractions.Dfs.IDfs,Catalyst.Abstractions.Hashing.IHashProvider,ILogger)
  commentId: M:Catalyst.Core.Modules.Consensus.Deltas.DeltaHub.#ctor(Catalyst.Abstractions.P2P.IO.Messaging.Broadcast.IBroadcastManager,Catalyst.Abstractions.P2P.IPeerSettings,Catalyst.Abstractions.Dfs.IDfs,Catalyst.Abstractions.Hashing.IHashProvider,ILogger)
  id: '#ctor(Catalyst.Abstractions.P2P.IO.Messaging.Broadcast.IBroadcastManager,Catalyst.Abstractions.P2P.IPeerSettings,Catalyst.Abstractions.Dfs.IDfs,Catalyst.Abstractions.Hashing.IHashProvider,ILogger)'
  parent: Catalyst.Core.Modules.Consensus.Deltas.DeltaHub
  langs:
  - csharp
  - vb
  name: DeltaHub(IBroadcastManager, IPeerSettings, IDfs, IHashProvider, ILogger)
  nameWithType: DeltaHub.DeltaHub(IBroadcastManager, IPeerSettings, IDfs, IHashProvider, ILogger)
  fullName: Catalyst.Core.Modules.Consensus.Deltas.DeltaHub.DeltaHub(Catalyst.Abstractions.P2P.IO.Messaging.Broadcast.IBroadcastManager, Catalyst.Abstractions.P2P.IPeerSettings, Catalyst.Abstractions.Dfs.IDfs, Catalyst.Abstractions.Hashing.IHashProvider, ILogger)
  type: Constructor
  source:
    remote:
      path: src/Catalyst.Core.Modules.Consensus/Deltas/DeltaHub.cs
      branch: gh-pages
      repo: https://github.com/catalyst-network/Catalyst.Framework.git
    id: .ctor
    path: ../src/Catalyst.Core.Modules.Consensus/Deltas/DeltaHub.cs
    startLine: 58
  assemblies:
  - Catalyst.Core.Modules.Consensus
  namespace: Catalyst.Core.Modules.Consensus.Deltas
  syntax:
    content: public DeltaHub(IBroadcastManager broadcastManager, IPeerSettings peerSettings, IDfs dfs, IHashProvider hashProvider, ILogger logger)
    parameters:
    - id: broadcastManager
      type: Catalyst.Abstractions.P2P.IO.Messaging.Broadcast.IBroadcastManager
    - id: peerSettings
      type: Catalyst.Abstractions.P2P.IPeerSettings
    - id: dfs
      type: Catalyst.Abstractions.Dfs.IDfs
    - id: hashProvider
      type: Catalyst.Abstractions.Hashing.IHashProvider
    - id: logger
      type: ILogger
    content.vb: Public Sub New(broadcastManager As IBroadcastManager, peerSettings As IPeerSettings, dfs As IDfs, hashProvider As IHashProvider, logger As ILogger)
  overload: Catalyst.Core.Modules.Consensus.Deltas.DeltaHub.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Catalyst.Core.Modules.Consensus.Deltas.DeltaHub.BroadcastCandidate(CandidateDeltaBroadcast)
  commentId: M:Catalyst.Core.Modules.Consensus.Deltas.DeltaHub.BroadcastCandidate(CandidateDeltaBroadcast)
  id: BroadcastCandidate(CandidateDeltaBroadcast)
  parent: Catalyst.Core.Modules.Consensus.Deltas.DeltaHub
  langs:
  - csharp
  - vb
  name: BroadcastCandidate(CandidateDeltaBroadcast)
  nameWithType: DeltaHub.BroadcastCandidate(CandidateDeltaBroadcast)
  fullName: Catalyst.Core.Modules.Consensus.Deltas.DeltaHub.BroadcastCandidate(CandidateDeltaBroadcast)
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Modules.Consensus/Deltas/DeltaHub.cs
      branch: gh-pages
      repo: https://github.com/catalyst-network/Catalyst.Framework.git
    id: BroadcastCandidate
    path: ../src/Catalyst.Core.Modules.Consensus/Deltas/DeltaHub.cs
    startLine: 76
  assemblies:
  - Catalyst.Core.Modules.Consensus
  namespace: Catalyst.Core.Modules.Consensus.Deltas
  example: []
  syntax:
    content: public void BroadcastCandidate(CandidateDeltaBroadcast candidate)
    parameters:
    - id: candidate
      type: CandidateDeltaBroadcast
    content.vb: Public Sub BroadcastCandidate(candidate As CandidateDeltaBroadcast)
  overload: Catalyst.Core.Modules.Consensus.Deltas.DeltaHub.BroadcastCandidate*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Catalyst.Core.Modules.Consensus.Deltas.DeltaHub.BroadcastFavouriteCandidateDelta(FavouriteDeltaBroadcast)
  commentId: M:Catalyst.Core.Modules.Consensus.Deltas.DeltaHub.BroadcastFavouriteCandidateDelta(FavouriteDeltaBroadcast)
  id: BroadcastFavouriteCandidateDelta(FavouriteDeltaBroadcast)
  parent: Catalyst.Core.Modules.Consensus.Deltas.DeltaHub
  langs:
  - csharp
  - vb
  name: BroadcastFavouriteCandidateDelta(FavouriteDeltaBroadcast)
  nameWithType: DeltaHub.BroadcastFavouriteCandidateDelta(FavouriteDeltaBroadcast)
  fullName: Catalyst.Core.Modules.Consensus.Deltas.DeltaHub.BroadcastFavouriteCandidateDelta(FavouriteDeltaBroadcast)
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Modules.Consensus/Deltas/DeltaHub.cs
      branch: gh-pages
      repo: https://github.com/catalyst-network/Catalyst.Framework.git
    id: BroadcastFavouriteCandidateDelta
    path: ../src/Catalyst.Core.Modules.Consensus/Deltas/DeltaHub.cs
    startLine: 95
  assemblies:
  - Catalyst.Core.Modules.Consensus
  namespace: Catalyst.Core.Modules.Consensus.Deltas
  example: []
  syntax:
    content: public void BroadcastFavouriteCandidateDelta(FavouriteDeltaBroadcast favourite)
    parameters:
    - id: favourite
      type: FavouriteDeltaBroadcast
    content.vb: Public Sub BroadcastFavouriteCandidateDelta(favourite As FavouriteDeltaBroadcast)
  overload: Catalyst.Core.Modules.Consensus.Deltas.DeltaHub.BroadcastFavouriteCandidateDelta*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Catalyst.Core.Modules.Consensus.Deltas.DeltaHub.PublishDeltaToDfsAndBroadcastAddressAsync(Delta,System.Threading.CancellationToken)
  commentId: M:Catalyst.Core.Modules.Consensus.Deltas.DeltaHub.PublishDeltaToDfsAndBroadcastAddressAsync(Delta,System.Threading.CancellationToken)
  id: PublishDeltaToDfsAndBroadcastAddressAsync(Delta,System.Threading.CancellationToken)
  parent: Catalyst.Core.Modules.Consensus.Deltas.DeltaHub
  langs:
  - csharp
  - vb
  name: PublishDeltaToDfsAndBroadcastAddressAsync(Delta, CancellationToken)
  nameWithType: DeltaHub.PublishDeltaToDfsAndBroadcastAddressAsync(Delta, CancellationToken)
  fullName: Catalyst.Core.Modules.Consensus.Deltas.DeltaHub.PublishDeltaToDfsAndBroadcastAddressAsync(Delta, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Modules.Consensus/Deltas/DeltaHub.cs
      branch: gh-pages
      repo: https://github.com/catalyst-network/Catalyst.Framework.git
    id: PublishDeltaToDfsAndBroadcastAddressAsync
    path: ../src/Catalyst.Core.Modules.Consensus/Deltas/DeltaHub.cs
    startLine: 105
  assemblies:
  - Catalyst.Core.Modules.Consensus
  namespace: Catalyst.Core.Modules.Consensus.Deltas
  example: []
  syntax:
    content: public Task<Cid> PublishDeltaToDfsAndBroadcastAddressAsync(Delta delta, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: delta
      type: Delta
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Cid}
    content.vb: Public Function PublishDeltaToDfsAndBroadcastAddressAsync(delta As Delta, cancellationToken As CancellationToken = Nothing) As Task(Of Cid)
  overload: Catalyst.Core.Modules.Consensus.Deltas.DeltaHub.PublishDeltaToDfsAndBroadcastAddressAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Catalyst.Core.Modules.Consensus.Deltas
  commentId: N:Catalyst.Core.Modules.Consensus.Deltas
  name: Catalyst.Core.Modules.Consensus.Deltas
  nameWithType: Catalyst.Core.Modules.Consensus.Deltas
  fullName: Catalyst.Core.Modules.Consensus.Deltas
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Catalyst.Abstractions.Consensus.Deltas.IDeltaHub
  commentId: T:Catalyst.Abstractions.Consensus.Deltas.IDeltaHub
  parent: Catalyst.Abstractions.Consensus.Deltas
  name: IDeltaHub
  nameWithType: IDeltaHub
  fullName: Catalyst.Abstractions.Consensus.Deltas.IDeltaHub
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Catalyst.Abstractions.Consensus.Deltas
  commentId: N:Catalyst.Abstractions.Consensus.Deltas
  name: Catalyst.Abstractions.Consensus.Deltas
  nameWithType: Catalyst.Abstractions.Consensus.Deltas
  fullName: Catalyst.Abstractions.Consensus.Deltas
- uid: Catalyst.Core.Modules.Consensus.Deltas.DeltaHub.DfsRetryPolicy*
  commentId: Overload:Catalyst.Core.Modules.Consensus.Deltas.DeltaHub.DfsRetryPolicy
  name: DfsRetryPolicy
  nameWithType: DeltaHub.DfsRetryPolicy
  fullName: Catalyst.Core.Modules.Consensus.Deltas.DeltaHub.DfsRetryPolicy
- uid: AsyncRetryPolicy{Cid}
  commentId: '!:AsyncRetryPolicy{Cid}'
  definition: AsyncRetryPolicy`1
  name: AsyncRetryPolicy<Cid>
  nameWithType: AsyncRetryPolicy<Cid>
  fullName: AsyncRetryPolicy<Cid>
  nameWithType.vb: AsyncRetryPolicy(Of Cid)
  fullName.vb: AsyncRetryPolicy(Of Cid)
  name.vb: AsyncRetryPolicy(Of Cid)
  spec.csharp:
  - uid: AsyncRetryPolicy`1
    name: AsyncRetryPolicy
    nameWithType: AsyncRetryPolicy
    fullName: AsyncRetryPolicy
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cid
    name: Cid
    nameWithType: Cid
    fullName: Cid
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: AsyncRetryPolicy`1
    name: AsyncRetryPolicy
    nameWithType: AsyncRetryPolicy
    fullName: AsyncRetryPolicy
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Cid
    name: Cid
    nameWithType: Cid
    fullName: Cid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AsyncRetryPolicy`1
  commentId: '!:AsyncRetryPolicy`1'
  isExternal: true
  name: AsyncRetryPolicy<>
  nameWithType: AsyncRetryPolicy<>
  fullName: AsyncRetryPolicy<>
  nameWithType.vb: AsyncRetryPolicy(Of )
  fullName.vb: AsyncRetryPolicy(Of )
  name.vb: AsyncRetryPolicy(Of )
  spec.csharp:
  - uid: AsyncRetryPolicy`1
    name: AsyncRetryPolicy
    nameWithType: AsyncRetryPolicy
    fullName: AsyncRetryPolicy
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: AsyncRetryPolicy`1
    name: AsyncRetryPolicy
    nameWithType: AsyncRetryPolicy
    fullName: AsyncRetryPolicy
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Catalyst.Core.Modules.Consensus.Deltas.DeltaHub.#ctor*
  commentId: Overload:Catalyst.Core.Modules.Consensus.Deltas.DeltaHub.#ctor
  name: DeltaHub
  nameWithType: DeltaHub.DeltaHub
  fullName: Catalyst.Core.Modules.Consensus.Deltas.DeltaHub.DeltaHub
- uid: Catalyst.Abstractions.P2P.IO.Messaging.Broadcast.IBroadcastManager
  commentId: T:Catalyst.Abstractions.P2P.IO.Messaging.Broadcast.IBroadcastManager
  parent: Catalyst.Abstractions.P2P.IO.Messaging.Broadcast
  name: IBroadcastManager
  nameWithType: IBroadcastManager
  fullName: Catalyst.Abstractions.P2P.IO.Messaging.Broadcast.IBroadcastManager
- uid: Catalyst.Abstractions.P2P.IPeerSettings
  commentId: T:Catalyst.Abstractions.P2P.IPeerSettings
  parent: Catalyst.Abstractions.P2P
  name: IPeerSettings
  nameWithType: IPeerSettings
  fullName: Catalyst.Abstractions.P2P.IPeerSettings
- uid: Catalyst.Abstractions.Dfs.IDfs
  commentId: T:Catalyst.Abstractions.Dfs.IDfs
  parent: Catalyst.Abstractions.Dfs
  name: IDfs
  nameWithType: IDfs
  fullName: Catalyst.Abstractions.Dfs.IDfs
- uid: Catalyst.Abstractions.Hashing.IHashProvider
  commentId: T:Catalyst.Abstractions.Hashing.IHashProvider
  parent: Catalyst.Abstractions.Hashing
  name: IHashProvider
  nameWithType: IHashProvider
  fullName: Catalyst.Abstractions.Hashing.IHashProvider
- uid: ILogger
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: ILogger
- uid: Catalyst.Abstractions.P2P.IO.Messaging.Broadcast
  commentId: N:Catalyst.Abstractions.P2P.IO.Messaging.Broadcast
  name: Catalyst.Abstractions.P2P.IO.Messaging.Broadcast
  nameWithType: Catalyst.Abstractions.P2P.IO.Messaging.Broadcast
  fullName: Catalyst.Abstractions.P2P.IO.Messaging.Broadcast
- uid: Catalyst.Abstractions.P2P
  commentId: N:Catalyst.Abstractions.P2P
  name: Catalyst.Abstractions.P2P
  nameWithType: Catalyst.Abstractions.P2P
  fullName: Catalyst.Abstractions.P2P
- uid: Catalyst.Abstractions.Dfs
  commentId: N:Catalyst.Abstractions.Dfs
  name: Catalyst.Abstractions.Dfs
  nameWithType: Catalyst.Abstractions.Dfs
  fullName: Catalyst.Abstractions.Dfs
- uid: Catalyst.Abstractions.Hashing
  commentId: N:Catalyst.Abstractions.Hashing
  name: Catalyst.Abstractions.Hashing
  nameWithType: Catalyst.Abstractions.Hashing
  fullName: Catalyst.Abstractions.Hashing
- uid: Catalyst.Core.Modules.Consensus.Deltas.DeltaHub.BroadcastCandidate*
  commentId: Overload:Catalyst.Core.Modules.Consensus.Deltas.DeltaHub.BroadcastCandidate
  name: BroadcastCandidate
  nameWithType: DeltaHub.BroadcastCandidate
  fullName: Catalyst.Core.Modules.Consensus.Deltas.DeltaHub.BroadcastCandidate
- uid: CandidateDeltaBroadcast
  isExternal: true
  name: CandidateDeltaBroadcast
  nameWithType: CandidateDeltaBroadcast
  fullName: CandidateDeltaBroadcast
- uid: Catalyst.Core.Modules.Consensus.Deltas.DeltaHub.BroadcastFavouriteCandidateDelta*
  commentId: Overload:Catalyst.Core.Modules.Consensus.Deltas.DeltaHub.BroadcastFavouriteCandidateDelta
  name: BroadcastFavouriteCandidateDelta
  nameWithType: DeltaHub.BroadcastFavouriteCandidateDelta
  fullName: Catalyst.Core.Modules.Consensus.Deltas.DeltaHub.BroadcastFavouriteCandidateDelta
- uid: FavouriteDeltaBroadcast
  isExternal: true
  name: FavouriteDeltaBroadcast
  nameWithType: FavouriteDeltaBroadcast
  fullName: FavouriteDeltaBroadcast
- uid: Catalyst.Core.Modules.Consensus.Deltas.DeltaHub.PublishDeltaToDfsAndBroadcastAddressAsync*
  commentId: Overload:Catalyst.Core.Modules.Consensus.Deltas.DeltaHub.PublishDeltaToDfsAndBroadcastAddressAsync
  name: PublishDeltaToDfsAndBroadcastAddressAsync
  nameWithType: DeltaHub.PublishDeltaToDfsAndBroadcastAddressAsync
  fullName: Catalyst.Core.Modules.Consensus.Deltas.DeltaHub.PublishDeltaToDfsAndBroadcastAddressAsync
- uid: Delta
  isExternal: true
  name: Delta
  nameWithType: Delta
  fullName: Delta
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Cid}
  commentId: T:System.Threading.Tasks.Task{Cid}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Cid>
  nameWithType: Task<Cid>
  fullName: System.Threading.Tasks.Task<Cid>
  nameWithType.vb: Task(Of Cid)
  fullName.vb: System.Threading.Tasks.Task(Of Cid)
  name.vb: Task(Of Cid)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Cid
    name: Cid
    nameWithType: Cid
    fullName: Cid
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Cid
    name: Cid
    nameWithType: Cid
    fullName: Cid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
