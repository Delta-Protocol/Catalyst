### YamlMime:ManagedReference
items:
- uid: Catalyst.Core.Modules.Rpc.Client.RpcClientFactory
  commentId: T:Catalyst.Core.Modules.Rpc.Client.RpcClientFactory
  id: RpcClientFactory
  parent: Catalyst.Core.Modules.Rpc.Client
  children:
  - Catalyst.Core.Modules.Rpc.Client.RpcClientFactory.#ctor(ITcpClientChannelFactory,ITcpClientEventLoopGroupFactory,System.Collections.Generic.IEnumerable{IRpcResponseObserver})
  - Catalyst.Core.Modules.Rpc.Client.RpcClientFactory.GetClient(System.Security.Cryptography.X509Certificates.X509Certificate2,IRpcClientConfig)
  langs:
  - csharp
  - vb
  name: RpcClientFactory
  nameWithType: RpcClientFactory
  fullName: Catalyst.Core.Modules.Rpc.Client.RpcClientFactory
  type: Class
  source:
    remote:
      path: src/Catalyst.Core.Modules.Rpc.Client/RpcClientFactory.cs
      branch: gh-pages
      repo: https://github.com/catalyst-network/Catalyst.Framework.git
    id: RpcClientFactory
    path: ../src/Catalyst.Core.Modules.Rpc.Client/RpcClientFactory.cs
    startLine: 33
  assemblies:
  - Catalyst.Core.Modules.Rpc.Client
  namespace: Catalyst.Core.Modules.Rpc.Client
  syntax:
    content: 'public sealed class RpcClientFactory : IRpcClientFactory'
    content.vb: >-
      Public NotInheritable Class RpcClientFactory

          Inherits IRpcClientFactory
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Catalyst.Core.Modules.Rpc.Client.RpcClientFactory.#ctor(ITcpClientChannelFactory,ITcpClientEventLoopGroupFactory,System.Collections.Generic.IEnumerable{IRpcResponseObserver})
  commentId: M:Catalyst.Core.Modules.Rpc.Client.RpcClientFactory.#ctor(ITcpClientChannelFactory,ITcpClientEventLoopGroupFactory,System.Collections.Generic.IEnumerable{IRpcResponseObserver})
  id: '#ctor(ITcpClientChannelFactory,ITcpClientEventLoopGroupFactory,System.Collections.Generic.IEnumerable{IRpcResponseObserver})'
  parent: Catalyst.Core.Modules.Rpc.Client.RpcClientFactory
  langs:
  - csharp
  - vb
  name: RpcClientFactory(ITcpClientChannelFactory, ITcpClientEventLoopGroupFactory, IEnumerable<IRpcResponseObserver>)
  nameWithType: RpcClientFactory.RpcClientFactory(ITcpClientChannelFactory, ITcpClientEventLoopGroupFactory, IEnumerable<IRpcResponseObserver>)
  fullName: Catalyst.Core.Modules.Rpc.Client.RpcClientFactory.RpcClientFactory(ITcpClientChannelFactory, ITcpClientEventLoopGroupFactory, System.Collections.Generic.IEnumerable<IRpcResponseObserver>)
  type: Constructor
  source:
    remote:
      path: src/Catalyst.Core.Modules.Rpc.Client/RpcClientFactory.cs
      branch: gh-pages
      repo: https://github.com/catalyst-network/Catalyst.Framework.git
    id: .ctor
    path: ../src/Catalyst.Core.Modules.Rpc.Client/RpcClientFactory.cs
    startLine: 39
  assemblies:
  - Catalyst.Core.Modules.Rpc.Client
  namespace: Catalyst.Core.Modules.Rpc.Client
  syntax:
    content: public RpcClientFactory(ITcpClientChannelFactory channelFactory, ITcpClientEventLoopGroupFactory clientEventLoopGroupFactory, IEnumerable<IRpcResponseObserver> handlers)
    parameters:
    - id: channelFactory
      type: ITcpClientChannelFactory
    - id: clientEventLoopGroupFactory
      type: ITcpClientEventLoopGroupFactory
    - id: handlers
      type: System.Collections.Generic.IEnumerable{IRpcResponseObserver}
    content.vb: Public Sub New(channelFactory As ITcpClientChannelFactory, clientEventLoopGroupFactory As ITcpClientEventLoopGroupFactory, handlers As IEnumerable(Of IRpcResponseObserver))
  overload: Catalyst.Core.Modules.Rpc.Client.RpcClientFactory.#ctor*
  nameWithType.vb: RpcClientFactory.RpcClientFactory(ITcpClientChannelFactory, ITcpClientEventLoopGroupFactory, IEnumerable(Of IRpcResponseObserver))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Catalyst.Core.Modules.Rpc.Client.RpcClientFactory.RpcClientFactory(ITcpClientChannelFactory, ITcpClientEventLoopGroupFactory, System.Collections.Generic.IEnumerable(Of IRpcResponseObserver))
  name.vb: RpcClientFactory(ITcpClientChannelFactory, ITcpClientEventLoopGroupFactory, IEnumerable(Of IRpcResponseObserver))
- uid: Catalyst.Core.Modules.Rpc.Client.RpcClientFactory.GetClient(System.Security.Cryptography.X509Certificates.X509Certificate2,IRpcClientConfig)
  commentId: M:Catalyst.Core.Modules.Rpc.Client.RpcClientFactory.GetClient(System.Security.Cryptography.X509Certificates.X509Certificate2,IRpcClientConfig)
  id: GetClient(System.Security.Cryptography.X509Certificates.X509Certificate2,IRpcClientConfig)
  parent: Catalyst.Core.Modules.Rpc.Client.RpcClientFactory
  langs:
  - csharp
  - vb
  name: GetClient(X509Certificate2, IRpcClientConfig)
  nameWithType: RpcClientFactory.GetClient(X509Certificate2, IRpcClientConfig)
  fullName: Catalyst.Core.Modules.Rpc.Client.RpcClientFactory.GetClient(System.Security.Cryptography.X509Certificates.X509Certificate2, IRpcClientConfig)
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Modules.Rpc.Client/RpcClientFactory.cs
      branch: gh-pages
      repo: https://github.com/catalyst-network/Catalyst.Framework.git
    id: GetClient
    path: ../src/Catalyst.Core.Modules.Rpc.Client/RpcClientFactory.cs
    startLine: 48
  assemblies:
  - Catalyst.Core.Modules.Rpc.Client
  namespace: Catalyst.Core.Modules.Rpc.Client
  syntax:
    content: public Task<IRpcClient> GetClient(X509Certificate2 certificate, IRpcClientConfig clientConfig)
    parameters:
    - id: certificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
    - id: clientConfig
      type: IRpcClientConfig
    return:
      type: System.Threading.Tasks.Task{IRpcClient}
    content.vb: Public Function GetClient(certificate As X509Certificate2, clientConfig As IRpcClientConfig) As Task(Of IRpcClient)
  overload: Catalyst.Core.Modules.Rpc.Client.RpcClientFactory.GetClient*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Catalyst.Core.Modules.Rpc.Client
  commentId: N:Catalyst.Core.Modules.Rpc.Client
  name: Catalyst.Core.Modules.Rpc.Client
  nameWithType: Catalyst.Core.Modules.Rpc.Client
  fullName: Catalyst.Core.Modules.Rpc.Client
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Catalyst.Core.Modules.Rpc.Client.RpcClientFactory.#ctor*
  commentId: Overload:Catalyst.Core.Modules.Rpc.Client.RpcClientFactory.#ctor
  name: RpcClientFactory
  nameWithType: RpcClientFactory.RpcClientFactory
  fullName: Catalyst.Core.Modules.Rpc.Client.RpcClientFactory.RpcClientFactory
- uid: ITcpClientChannelFactory
  isExternal: true
  name: ITcpClientChannelFactory
  nameWithType: ITcpClientChannelFactory
  fullName: ITcpClientChannelFactory
- uid: ITcpClientEventLoopGroupFactory
  isExternal: true
  name: ITcpClientEventLoopGroupFactory
  nameWithType: ITcpClientEventLoopGroupFactory
  fullName: ITcpClientEventLoopGroupFactory
- uid: System.Collections.Generic.IEnumerable{IRpcResponseObserver}
  commentId: T:System.Collections.Generic.IEnumerable{IRpcResponseObserver}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IRpcResponseObserver>
  nameWithType: IEnumerable<IRpcResponseObserver>
  fullName: System.Collections.Generic.IEnumerable<IRpcResponseObserver>
  nameWithType.vb: IEnumerable(Of IRpcResponseObserver)
  fullName.vb: System.Collections.Generic.IEnumerable(Of IRpcResponseObserver)
  name.vb: IEnumerable(Of IRpcResponseObserver)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: IRpcResponseObserver
    name: IRpcResponseObserver
    nameWithType: IRpcResponseObserver
    fullName: IRpcResponseObserver
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: IRpcResponseObserver
    name: IRpcResponseObserver
    nameWithType: IRpcResponseObserver
    fullName: IRpcResponseObserver
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Catalyst.Core.Modules.Rpc.Client.RpcClientFactory.GetClient*
  commentId: Overload:Catalyst.Core.Modules.Rpc.Client.RpcClientFactory.GetClient
  name: GetClient
  nameWithType: RpcClientFactory.GetClient
  fullName: Catalyst.Core.Modules.Rpc.Client.RpcClientFactory.GetClient
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2
  commentId: T:System.Security.Cryptography.X509Certificates.X509Certificate2
  parent: System.Security.Cryptography.X509Certificates
  isExternal: true
  name: X509Certificate2
  nameWithType: X509Certificate2
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
- uid: IRpcClientConfig
  isExternal: true
  name: IRpcClientConfig
  nameWithType: IRpcClientConfig
  fullName: IRpcClientConfig
- uid: System.Threading.Tasks.Task{IRpcClient}
  commentId: T:System.Threading.Tasks.Task{IRpcClient}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IRpcClient>
  nameWithType: Task<IRpcClient>
  fullName: System.Threading.Tasks.Task<IRpcClient>
  nameWithType.vb: Task(Of IRpcClient)
  fullName.vb: System.Threading.Tasks.Task(Of IRpcClient)
  name.vb: Task(Of IRpcClient)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: IRpcClient
    name: IRpcClient
    nameWithType: IRpcClient
    fullName: IRpcClient
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: IRpcClient
    name: IRpcClient
    nameWithType: IRpcClient
    fullName: IRpcClient
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.Cryptography.X509Certificates
  commentId: N:System.Security.Cryptography.X509Certificates
  isExternal: true
  name: System.Security.Cryptography.X509Certificates
  nameWithType: System.Security.Cryptography.X509Certificates
  fullName: System.Security.Cryptography.X509Certificates
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
