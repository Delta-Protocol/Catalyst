### YamlMime:ManagedReference
items:
- uid: Catalyst.Core.Modules.Web3.Controllers.LedgerController
  commentId: T:Catalyst.Core.Modules.Web3.Controllers.LedgerController
  id: LedgerController
  parent: Catalyst.Core.Modules.Web3.Controllers
  children:
  - Catalyst.Core.Modules.Web3.Controllers.LedgerController.#ctor(Catalyst.Abstractions.Consensus.Deltas.IDeltaHashProvider,Catalyst.Abstractions.Dfs.IDfs,ILogger)
  - Catalyst.Core.Modules.Web3.Controllers.LedgerController.GetLatestDelta(System.Nullable{System.DateTime})
  langs:
  - csharp
  - vb
  name: LedgerController
  nameWithType: LedgerController
  fullName: Catalyst.Core.Modules.Web3.Controllers.LedgerController
  type: Class
  source:
    remote:
      path: src/Catalyst.Core.Modules.Web3/Controllers/LedgerController.cs
      branch: gh-pages
      repo: https://github.com/catalyst-network/Catalyst.Framework.git
    id: LedgerController
    path: ../src/Catalyst.Core.Modules.Web3/Controllers/LedgerController.cs
    startLine: 35
  assemblies:
  - Catalyst.Core.Modules.Web3
  namespace: Catalyst.Core.Modules.Web3.Controllers
  syntax:
    content: 'public sealed class LedgerController : Controller'
    content.vb: >-
      Public NotInheritable Class LedgerController

          Inherits Controller
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Catalyst.Core.Modules.Web3.Controllers.LedgerController.#ctor(Catalyst.Abstractions.Consensus.Deltas.IDeltaHashProvider,Catalyst.Abstractions.Dfs.IDfs,ILogger)
  commentId: M:Catalyst.Core.Modules.Web3.Controllers.LedgerController.#ctor(Catalyst.Abstractions.Consensus.Deltas.IDeltaHashProvider,Catalyst.Abstractions.Dfs.IDfs,ILogger)
  id: '#ctor(Catalyst.Abstractions.Consensus.Deltas.IDeltaHashProvider,Catalyst.Abstractions.Dfs.IDfs,ILogger)'
  parent: Catalyst.Core.Modules.Web3.Controllers.LedgerController
  langs:
  - csharp
  - vb
  name: LedgerController(IDeltaHashProvider, IDfs, ILogger)
  nameWithType: LedgerController.LedgerController(IDeltaHashProvider, IDfs, ILogger)
  fullName: Catalyst.Core.Modules.Web3.Controllers.LedgerController.LedgerController(Catalyst.Abstractions.Consensus.Deltas.IDeltaHashProvider, Catalyst.Abstractions.Dfs.IDfs, ILogger)
  type: Constructor
  source:
    remote:
      path: src/Catalyst.Core.Modules.Web3/Controllers/LedgerController.cs
      branch: gh-pages
      repo: https://github.com/catalyst-network/Catalyst.Framework.git
    id: .ctor
    path: ../src/Catalyst.Core.Modules.Web3/Controllers/LedgerController.cs
    startLine: 43
  assemblies:
  - Catalyst.Core.Modules.Web3
  namespace: Catalyst.Core.Modules.Web3.Controllers
  syntax:
    content: public LedgerController(IDeltaHashProvider deltaHashProvider, IDfs dfs, ILogger logger)
    parameters:
    - id: deltaHashProvider
      type: Catalyst.Abstractions.Consensus.Deltas.IDeltaHashProvider
    - id: dfs
      type: Catalyst.Abstractions.Dfs.IDfs
    - id: logger
      type: ILogger
    content.vb: Public Sub New(deltaHashProvider As IDeltaHashProvider, dfs As IDfs, logger As ILogger)
  overload: Catalyst.Core.Modules.Web3.Controllers.LedgerController.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Catalyst.Core.Modules.Web3.Controllers.LedgerController.GetLatestDelta(System.Nullable{System.DateTime})
  commentId: M:Catalyst.Core.Modules.Web3.Controllers.LedgerController.GetLatestDelta(System.Nullable{System.DateTime})
  id: GetLatestDelta(System.Nullable{System.DateTime})
  parent: Catalyst.Core.Modules.Web3.Controllers.LedgerController
  langs:
  - csharp
  - vb
  name: GetLatestDelta(Nullable<DateTime>)
  nameWithType: LedgerController.GetLatestDelta(Nullable<DateTime>)
  fullName: Catalyst.Core.Modules.Web3.Controllers.LedgerController.GetLatestDelta(System.Nullable<System.DateTime>)
  type: Method
  source:
    remote:
      path: src/Catalyst.Core.Modules.Web3/Controllers/LedgerController.cs
      branch: gh-pages
      repo: https://github.com/catalyst-network/Catalyst.Framework.git
    id: GetLatestDelta
    path: ../src/Catalyst.Core.Modules.Web3/Controllers/LedgerController.cs
    startLine: 50
  assemblies:
  - Catalyst.Core.Modules.Web3
  namespace: Catalyst.Core.Modules.Web3.Controllers
  syntax:
    content: public Task<JsonResult> GetLatestDelta(DateTime? asOf)
    parameters:
    - id: asOf
      type: System.Nullable{System.DateTime}
    return:
      type: System.Threading.Tasks.Task{JsonResult}
    content.vb: Public Function GetLatestDelta(asOf As Date?) As Task(Of JsonResult)
  overload: Catalyst.Core.Modules.Web3.Controllers.LedgerController.GetLatestDelta*
  nameWithType.vb: LedgerController.GetLatestDelta(Nullable(Of DateTime))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Catalyst.Core.Modules.Web3.Controllers.LedgerController.GetLatestDelta(System.Nullable(Of System.DateTime))
  name.vb: GetLatestDelta(Nullable(Of DateTime))
references:
- uid: Catalyst.Core.Modules.Web3.Controllers
  commentId: N:Catalyst.Core.Modules.Web3.Controllers
  name: Catalyst.Core.Modules.Web3.Controllers
  nameWithType: Catalyst.Core.Modules.Web3.Controllers
  fullName: Catalyst.Core.Modules.Web3.Controllers
- uid: Catalyst.Core.Modules.Web3.Controllers.LedgerController.#ctor*
  commentId: Overload:Catalyst.Core.Modules.Web3.Controllers.LedgerController.#ctor
  name: LedgerController
  nameWithType: LedgerController.LedgerController
  fullName: Catalyst.Core.Modules.Web3.Controllers.LedgerController.LedgerController
- uid: Catalyst.Abstractions.Consensus.Deltas.IDeltaHashProvider
  commentId: T:Catalyst.Abstractions.Consensus.Deltas.IDeltaHashProvider
  parent: Catalyst.Abstractions.Consensus.Deltas
  name: IDeltaHashProvider
  nameWithType: IDeltaHashProvider
  fullName: Catalyst.Abstractions.Consensus.Deltas.IDeltaHashProvider
- uid: Catalyst.Abstractions.Dfs.IDfs
  commentId: T:Catalyst.Abstractions.Dfs.IDfs
  parent: Catalyst.Abstractions.Dfs
  name: IDfs
  nameWithType: IDfs
  fullName: Catalyst.Abstractions.Dfs.IDfs
- uid: ILogger
  commentId: '!:ILogger'
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: ILogger
- uid: Catalyst.Abstractions.Consensus.Deltas
  commentId: N:Catalyst.Abstractions.Consensus.Deltas
  name: Catalyst.Abstractions.Consensus.Deltas
  nameWithType: Catalyst.Abstractions.Consensus.Deltas
  fullName: Catalyst.Abstractions.Consensus.Deltas
- uid: Catalyst.Abstractions.Dfs
  commentId: N:Catalyst.Abstractions.Dfs
  name: Catalyst.Abstractions.Dfs
  nameWithType: Catalyst.Abstractions.Dfs
  fullName: Catalyst.Abstractions.Dfs
- uid: Catalyst.Core.Modules.Web3.Controllers.LedgerController.GetLatestDelta*
  commentId: Overload:Catalyst.Core.Modules.Web3.Controllers.LedgerController.GetLatestDelta
  name: GetLatestDelta
  nameWithType: LedgerController.GetLatestDelta
  fullName: Catalyst.Core.Modules.Web3.Controllers.LedgerController.GetLatestDelta
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullName.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{JsonResult}
  commentId: T:System.Threading.Tasks.Task{JsonResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<JsonResult>
  nameWithType: Task<JsonResult>
  fullName: System.Threading.Tasks.Task<JsonResult>
  nameWithType.vb: Task(Of JsonResult)
  fullName.vb: System.Threading.Tasks.Task(Of JsonResult)
  name.vb: Task(Of JsonResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: JsonResult
    name: JsonResult
    nameWithType: JsonResult
    fullName: JsonResult
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: JsonResult
    name: JsonResult
    nameWithType: JsonResult
    fullName: JsonResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
